{"version":3,"sources":["webpack:///./src/components/AboutPage/index.js","webpack:///./src/components/BodyText/BodyText.js"],"names":["AboutPage","_ref","title","lang","t","useTranslation","intro","content","en","seoDescription","mainSEOdescription","React","createElement","Layout","SEO","description","keywords","concat","_toConsumableArray","mainSEOtags","Banner","style","paddingBottom","overflow","display","justifyContent","marginBottom","className","Image","contain","margin","alt","src","landingImage","Element","BodyText","heading","level","headingFontSize","flex","spaceBetween","text","headingFont","PartBanner","bold","centered","noPadding","props","classes","push","Object","assign","getHeading","Heading","fontSize","join","map","p","key","Parser","defaultProps"],"mappings":"qt2BAwEeA,IAzDGC,IAAsB,IAArB,MAAEC,EAAK,KAAEC,GAAMF,EAChC,MAAM,EAAEG,GAAMC,eACR,MAAEC,GAAUC,EAAQJ,IAASI,EAAQC,GACrCC,EAAiBC,IAAmBP,IAASO,IAAmBF,GAEtE,OACEG,IAAAC,cAACC,IAAM,KACLF,IAAAC,cAACE,IAAG,CACFX,KAAMA,EACND,MAAOA,EACPa,YAAaN,EACbO,SAAQ,GAAAC,OAAAC,YACHC,KAAW,CACd,kBACA,8BAIJR,IAAAC,cAACQ,IAAM,CAACC,MAAO,CAAEC,cAAe,EAAGC,SAAU,WAC3CZ,IAAAC,cAAA,OACES,MAAO,CACLG,QAAS,OACTC,eAAgB,SAChBC,aAAc,SAEhBC,UAAU,aAEVhB,IAAAC,cAACgB,IAAK,CACJD,UAAU,qBACVE,SAAO,EACPR,MAAO,CAAES,OAAQ,GACjBC,IAAI,oDACJC,IAAKC,QAKXtB,IAAAC,cAACsB,IAAO,CAACP,UAAU,4CACjBhB,IAAAC,cAACsB,IAAO,CAACP,UAAU,sBACjBhB,IAAAC,cAACuB,IAAQ,CACPC,QAAS,CAAEC,MAAO,KAAMnC,MAAOE,EAAE,2BACjCkC,gBAAgB,WAGlB3B,IAAAC,cAACsB,IAAO,CAACK,MAAI,EAACC,cAAY,GACxB7B,IAAAC,cAAA,OAAKe,UAAU,yBACbhB,IAAAC,cAACuB,IAAQ,CAACM,KAAMnC,EAAOqB,UAAU,OAAOe,aAAW,QAM3D/B,IAAAC,cAAC+B,IAAU,CAACxC,KAAMA,O,kCCnExB,0FAMO,MAAMgC,EAAWlC,IAUjB,IAVkB,KACvBwC,EAAI,UACJd,EAAS,QACTS,EAAO,gBACPE,EAAe,KACfM,EAAI,SACJC,EAAQ,UACRC,EAAS,YACTJ,KACGK,GACJ9C,EACC,MAAM+C,EAAU,GAEhBH,GAAYG,EAAQC,KAAK,YACzBL,GAAQI,EAAQC,KAAK,QACrBH,GAAaE,EAAQC,KAAK,yBAC1BP,GAAeM,EAAQC,KAAK,gBAkB5B,OACEtC,IAAAC,cAAA,MAAAsC,OAAAC,OAAA,CAAKxB,UAAS,aAAeA,GAAiBoB,GAC3CX,EAAQlC,OAlBMkD,MACjB,GAAIhB,EAAS,CACX,MAAMiB,EAAUjB,EAAQC,MACxB,OACE1B,IAAAC,cAACyC,EAAO,CACN1B,UAAU,mBACVN,MAAOiB,EAAkB,CAAEgB,SAAUhB,GAAoB,IAExDF,EAAQlC,OAIb,OAAO,MAMWkD,GACjBX,GAAwB,iBAATA,EACd9B,IAAAC,cAAA,KAAGe,UAAS,sBAAwBqB,EAAQO,KAAK,MAASd,GAE1DA,GACAA,EAAKe,IAAIC,GACP9C,IAAAC,cAAA,OAAK8C,IAAKD,EAAG9B,UAAS,sBAAwBqB,EAAQO,KAAK,MACxDI,IAAOF,OAQpBtB,EAASyB,aAAe,CACtBxB,QAAS,CAAElC,MAAO,GAAImC,MAAO,MAC7BI,KAAM,GACNd,UAAW,GACXkB,UAAU,EACVD,MAAM,EACNE,WAAW,I","file":"70ab57c681cf0e78e0dd83c5ca5cc56f7a8f16a9-40e4b441d19ccbf1289c.js","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Banner } from '../Banner/Banner';\nimport { BodyText } from '../BodyText/BodyText';\nimport Element from '../Element/Element';\nimport { Image } from './../Image/Image';\nimport Layout from '../layout';\nimport { PartBanner } from '../PartBanner/PartBanner';\nimport SEO from '../seo';\nimport content from '../../content/pages/about.json';\nimport landingImage from '../../images/landing.svg';\nimport mainSEOdescription from '../../content/seo/mainSEOdescription';\nimport mainSEOtags from '../../content/seo/mainSEOtags';\n\nconst AboutPage = ({ title, lang }) => {\n  const { t } = useTranslation();\n  const { intro } = content[lang] || content.en;\n  const seoDescription = mainSEOdescription[lang] || mainSEOdescription.en;\n\n  return (\n    <Layout>\n      <SEO\n        lang={lang}\n        title={title}\n        description={seoDescription}\n        keywords={[\n          ...mainSEOtags,\n          'Avoin yliopisto',\n          'Full stack harjoitustyÃ¶',\n        ]}\n      />\n\n      <Banner style={{ paddingBottom: 0, overflow: 'hidden' }}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: '-70px',\n          }}\n          className=\"container\"\n        >\n          <Image\n            className=\"col-4 push-right-2\"\n            contain\n            style={{ margin: 0 }}\n            alt=\"Stacked cubes with React logo and JavaScript text\"\n            src={landingImage}\n          />\n        </div>\n      </Banner>\n\n      <Element className=\"container spacing spacing--mobile--large\">\n        <Element className=\"col-8 push-right-1\">\n          <BodyText\n            heading={{ level: 'h1', title: t('aboutPage:generalTitle') }}\n            headingFontSize=\"2.3rem\"\n          />\n\n          <Element flex spaceBetween>\n            <div className=\"col-10 spacing--after\">\n              <BodyText text={intro} className=\"link\" headingFont />\n            </div>\n          </Element>\n        </Element>\n      </Element>\n\n      <PartBanner lang={lang} />\n    </Layout>\n  );\n};\n\nexport default AboutPage;\n","import './BodyText.scss';\n\nimport Parser from 'html-react-parser';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport const BodyText = ({\n  text,\n  className,\n  heading,\n  headingFontSize,\n  bold,\n  centered,\n  noPadding,\n  headingFont,\n  ...props\n}) => {\n  const classes = [];\n\n  centered && classes.push('centered');\n  bold && classes.push('bold');\n  noPadding && classes.push('body-text--no-padding');\n  headingFont && classes.push('heading-font');\n\n  const getHeading = () => {\n    if (heading) {\n      const Heading = heading.level;\n      return (\n        <Heading\n          className=\"body-text__title\"\n          style={headingFontSize ? { fontSize: headingFontSize } : {}}\n        >\n          {heading.title}\n        </Heading>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <div className={`body-text ${className}`} {...props}>\n      {heading.title && getHeading()}\n      {text && typeof text === 'string' ? (\n        <p className={`body-text__content ${classes.join(' ')}`}>{text}</p>\n      ) : (\n        text &&\n        text.map(p => (\n          <div key={p} className={`body-text__content ${classes.join(' ')}`}>\n            {Parser(p)}\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nBodyText.defaultProps = {\n  heading: { title: '', level: 'h2' },\n  text: '',\n  className: '',\n  centered: false,\n  bold: false,\n  noPadding: false,\n};\n\nBodyText.propTypes = {\n  heading: PropTypes.shape({\n    text: PropTypes.string,\n    level: PropTypes.string,\n  }),\n  headingFontSize: PropTypes.string,\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  className: PropTypes.string,\n  centered: PropTypes.bool,\n  bold: PropTypes.bool,\n  noPadding: PropTypes.bool,\n};\n"],"sourceRoot":""}