{"componentChunkName":"component---src-templates-content-template-js","path":"/ptbr/part3/validacao_e_es_lint","result":{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<p>Existem restrições que normalmente queremos aplicar aos dados armazenados no banco de dados da nossa aplicação. Nossa aplicação não deve aceitar notas que tenham uma propriedade <i>content</i> em falta ou vazia. A validade da nota é verificada no gerenciador de rota:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/notes'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">.</span>content <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'content missing'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Se a nota não tiver a propriedade <i>content</i>, respondemos à requisição com o código de status <i>400 bad request</i> (400 requisição inválida).</p>\n<p>Uma maneira mais inteligente de validar o formato dos dados antes de serem armazenados no banco de dados é usar a funcionalidade de <a href=\"https://mongoosejs.com/docs/validation.html\">validação</a> (validation) disponível no Mongoose.</p>\n<p>Podemos definir regras de validação específicas para cada campo no esquema:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> noteSchema <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">mongoose<span class=\"token punctuation\">.</span>Schema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">minLength</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">required</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>  <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> Boolean\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>O campo <i>content</i> agora deve ter pelo menos cinco caracteres de comprimento e é definido como obrigatório, o que significa que não pode estar faltando. Não adicionamos nenhuma restrição ao campo <i>important</i>, portanto, sua definição no esquema não mudou.</p>\n<p>Os validadores <i>minLength</i> (grosso modo, \"comprimentoMínimo\") e <i>required</i> são <a href=\"https://mongoosejs.com/docs/validation.html#built-in-validators\">integrados</a> (built-in) e fornecidos pelo Mongoose. A funcionalidade de <a href=\"https://mongoosejs.com/docs/validation.html#custom-validators\">validação personalizada</a> do Mongoose nos permite criar novos validadores se nenhum dos integrados atender às nossas necessidades.</p>\n<p>Se tentarmos armazenar no banco de dados um objeto que viola uma das restrições, a operação lançará uma exceção. Vamos alterar nosso gerenciador para criar uma nova nota para que ele passe quaisquer exceções potenciais para o middleware gerenciador de erros:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\">app<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/notes'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body\n\n  <span class=\"token keyword\">const</span> note <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Note</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> body<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> body<span class=\"token punctuation\">.</span>important <span class=\"token operator\">||</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  note<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">savedNote</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>savedNote<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Vamos expandir o gerenciador de erros para lidar com os erros de validação:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">errorHandler</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'CastError'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'malformatted id'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'ValidationError'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> error<span class=\"token punctuation\">.</span>message <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Quando a validação de um objeto falha, retornamos a seguinte mensagem de erro padrão do Mongoose:</p>\n<picture><img src=\"/static/6beb35ed56d2e06e0eda3e36dea9f426/5a190/50.png\" alt=\"mensagem de erro sendo exibida no postman\" srcset=\"/static/6beb35ed56d2e06e0eda3e36dea9f426/772e8/50.png 200w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/e17e5/50.png 400w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/5a190/50.png 800w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/c1b63/50.png 1200w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/29007/50.png 1600w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/1e1c3/50.png 1670w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Percebemos que o backend tem agora um problema: as validações não são executadas quando uma nota é editada.\nA <a href=\"https://github.com/blakehaswell/mongoose-unique-validator#find--updates\">documentação</a> explica qual é o problema: as validações não são executadas por padrão quando <i>findOneAndUpdate</i> é executado.</p>\n<p>É fácil a correção. Também vamos reformular um pouco o código da rota:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/notes/:id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> content<span class=\"token punctuation\">,</span> important <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body</span>\n  Note<span class=\"token punctuation\">.</span><span class=\"token function\">findByIdAndUpdate</span><span class=\"token punctuation\">(</span>\n    request<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> \n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">{</span> content<span class=\"token punctuation\">,</span> important <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">{</span> <span class=\"token keyword\">new</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">runValidators</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">context</span><span class=\"token operator\">:</span> <span class=\"token string\">'query'</span> <span class=\"token punctuation\">}</span></span>  <span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">updatedNote</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>updatedNote<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Implantando o backend do banco de dados para produção</h3>\n<p>A aplicação deve funcionar quase como está no Fly.io/Render. Não precisamos gerar um novo build de produção do frontend, uma vez que as alterações até agora ocorreram apenas no backend.</p>\n<p>As variáveis de ambiente definidas em <i>dotenv</i> só serão usadas quando o backend não estiver em <i>modo de produção</i> (production mode), ou seja, no Fly.io ou Render.</p>\n<p>Para colocar em produção, temos que definir a URL do banco de dados no serviço que está hospedando nossa aplicação.</p>\n<p>Isso é feito no Fly.io com <em>fly secrets set</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">fly secrets set MONGODB_URI='mongodb+srv://fullstack:thepasswordishere@cluster0.o1opl.mongodb.net/noteApp?retryWrites=true&amp;w=majority'</code></pre></div>\n<p>Quando a aplicação está sendo desenvolvida, é mais do que provável que algo falhe. Por exemplo, quando implantei minha aplicação pela primeira vez com o banco de dados, não foi exibida uma única nota sequer:</p>\n<picture><img src=\"/static/ba06b14a502f7da32b06c9cd2e79f97b/5a190/fly-problem1.png\" alt=\"nenhuma nota sendo exibida na aplicação online\" srcset=\"/static/ba06b14a502f7da32b06c9cd2e79f97b/772e8/fly-problem1.png 200w,\n/static/ba06b14a502f7da32b06c9cd2e79f97b/e17e5/fly-problem1.png 400w,\n/static/ba06b14a502f7da32b06c9cd2e79f97b/5a190/fly-problem1.png 800w,\n/static/ba06b14a502f7da32b06c9cd2e79f97b/c1b63/fly-problem1.png 1200w,\n/static/ba06b14a502f7da32b06c9cd2e79f97b/29007/fly-problem1.png 1600w,\n/static/ba06b14a502f7da32b06c9cd2e79f97b/da952/fly-problem1.png 1872w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>O console do navegador na guia Rede revelou que a busca pelas notas não teve sucesso — a requisição simplesmente permaneceu por muito tempo no estado <em>pendente</em> (pending) até falhar e exibir o código de status 502.</p>\n<p>O console do navegador tem que estar aberto <i>o tempo todo!</i></p>\n<p>Também é vital acompanhar continuamente os logs do servidor. O problema ficou óbvio quando os logs foram abertos com <em>fly logs</em>:</p>\n<picture><img src=\"/static/92ac2c6e2e4d0f84bb7a5a5317708d75/5a190/fly-problem3.png\" alt=\"logs da aplicação online no Fly.io\" srcset=\"/static/92ac2c6e2e4d0f84bb7a5a5317708d75/772e8/fly-problem3.png 200w,\n/static/92ac2c6e2e4d0f84bb7a5a5317708d75/e17e5/fly-problem3.png 400w,\n/static/92ac2c6e2e4d0f84bb7a5a5317708d75/5a190/fly-problem3.png 800w,\n/static/92ac2c6e2e4d0f84bb7a5a5317708d75/c1b63/fly-problem3.png 1200w,\n/static/92ac2c6e2e4d0f84bb7a5a5317708d75/29007/fly-problem3.png 1600w,\n/static/92ac2c6e2e4d0f84bb7a5a5317708d75/7970d/fly-problem3.png 1908w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>A URL do banco de dados estava <em>undefined</em> (indefinida), então o comando <em>fly secrets set MONGODB_URI</em> foi esquecido.</p>\n<p>Ao usar o Render, a URL do banco de dados é fornecida definindo a variável de ambiente adequada no painel:</p>\n<picture><img src=\"/static/ae7c73092becbbef8aa45299e9b8fbcd/5a190/render-env.png\" alt=\"opção da variáveis de ambiente no painel do Render\" srcset=\"/static/ae7c73092becbbef8aa45299e9b8fbcd/772e8/render-env.png 200w,\n/static/ae7c73092becbbef8aa45299e9b8fbcd/e17e5/render-env.png 400w,\n/static/ae7c73092becbbef8aa45299e9b8fbcd/5a190/render-env.png 800w,\n/static/ae7c73092becbbef8aa45299e9b8fbcd/c1b63/render-env.png 1200w,\n/static/ae7c73092becbbef8aa45299e9b8fbcd/29007/render-env.png 1600w,\n/static/ae7c73092becbbef8aa45299e9b8fbcd/97a96/render-env.png 2400w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>O Painel do Render mostra os logs do servidor:</p>\n<picture><img src=\"/static/798d2488fb450327abf2b6729faaaeec/5a190/r7.png\" alt=\"logs da aplicação online no Render\" srcset=\"/static/798d2488fb450327abf2b6729faaaeec/772e8/r7.png 200w,\n/static/798d2488fb450327abf2b6729faaaeec/e17e5/r7.png 400w,\n/static/798d2488fb450327abf2b6729faaaeec/5a190/r7.png 800w,\n/static/798d2488fb450327abf2b6729faaaeec/c1b63/r7.png 1200w,\n/static/798d2488fb450327abf2b6729faaaeec/29007/r7.png 1600w,\n/static/798d2488fb450327abf2b6729faaaeec/b5c8e/r7.png 2194w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>É possível encontrar o código da nossa aplicação atual na íntegra na branch <i>part3-5</i> <a href=\"https://github.com/fullstack-hy2019/part3-notes-backend/tree/part3-5\">neste repositório do GitHub</a>.</p>\n</div>\n<div class=\"tasks\">\n<h3>Exercícios 3.19 a 3.21</h3>\n<h4>3.19*: Phonebook database — 7º passo</h4>\n<p>Expanda a validação para que o nome armazenado no banco de dados tenha pelo menos três caracteres.</p>\n<p>Expanda o frontend para que seja exibido algum tipo de mensagem de erro quando ocorrer um erro de validação. O gerenciamento de erros pode ser implementado adicionando um bloco <em>catch</em> como mostrado abaixo:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">personService\n    <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">createdPerson</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// esta é a maneira de acessar a mensagem de erro</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Você pode exibir a mensagem de erro padrão retornada pelo Mongoose, mesmo que essas mensagens não sejam tão legíveis:</p>\n<picture><img src=\"/static/fddf847e340f060549c3029f464a5493/5a190/56e.png\" alt=\"captura de tela da lista telefônica mostrando falha na validação de uma pessoa\" srcset=\"/static/fddf847e340f060549c3029f464a5493/772e8/56e.png 200w,\n/static/fddf847e340f060549c3029f464a5493/e17e5/56e.png 400w,\n/static/fddf847e340f060549c3029f464a5493/5a190/56e.png 800w,\n/static/fddf847e340f060549c3029f464a5493/c1b63/56e.png 1200w,\n/static/fddf847e340f060549c3029f464a5493/29007/56e.png 1600w,\n/static/fddf847e340f060549c3029f464a5493/f4fb1/56e.png 1766w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p><strong>Obs.:</strong> Os validadores do mongoose são desativados por padrão nas operações de atualização. <a href=\"https://mongoosejs.com/docs/validation.html\">Leia a documentação</a> para saber como ativá-los.</p>\n<h4>3.20*: Phonebook database — 8º passo</h4>\n<p>Aplique a validação à sua aplicação da lista telefônica, na qual garantirá que os números de telefone estejam no formato correto. Um número de telefone deve:</p>\n<ul>\n<li>Ter comprimento de 8 ou mais caracteres;</li>\n<li>\n<p>Se for composto por duas partes que são separadas por \"-\" (hífen), a primeira parte deve ter dois ou três números e a segunda parte também é completada com o restante do número telefônico:</p>\n<ul>\n<li>Ex.: 09-1234556 e 040-22334455 são números válidos;</li>\n<li>Ex.: 1234556, 1-22334455 e 10-22-334455 são números inválidos.</li>\n</ul>\n</li>\n</ul>\n<p>Use um <a href=\"https://mongoosejs.com/docs/validation.html#custom-validators\">Validador Personalizado</a> (Custom validator) para implementar a segunda parte da validação.</p>\n<p>Se uma requisição HTTP POST tentar adicionar uma pessoa com um número de telefone inválido, o servidor deve responder com um código de status apropriado e uma mensagem de erro.</p>\n<h4>3.21 Implantação do backend do banco de dados para produção</h4>\n<p>Gere uma nova versão \"full stack\" da aplicação criando um novo build de produção do frontend, assim copiando-o ao repositório do backend. Verifique se tudo funciona localmente acessando a aplicação inteira no endereço <a href=\"http://localhost:3001/\">http://localhost:3001/</a>.</p>\n<p>Envie a versão mais recente para o Fly.io/Render e verifique se tudo funciona lá também.</p>\n<p><strong>NOTA:</strong> você deve implantar o BACKEND no serviço em nuvem. Se estiver usando o Fly.io, os comandos devem ser executados no diretório raiz do backend (ou seja, no mesmo diretório onde está o package.json do backend). Caso esteja usando o Render, o backend deve estar na raiz do seu repositório.</p>\n<p>Você NÃO deve implantar o frontend diretamente em nenhuma etapa desta parte. Somente o repositório do backend que é implantado nesta parte, nada mais.</p>\n</div>\n<div class=\"content\">\n<h3>Lint</h3>\n<p>Antes de prosseguirmos para a próxima parte, vamos dar uma olhada em uma ferramenta importante chamada <a href=\"https://en.wikipedia.org/wiki/Lint_(software)\">lint</a>. A Wikipedia diz o seguinte sobre o lint:</p>\n<blockquote>\n<p><i>De forma genérica, lint ou um linter é qualquer ferramenta que detecta e sinaliza erros em linguagens de programação, incluindo erros de estilo. O termo \"<i>lint-like behavior</i>\" (\"de um jeito lint\") é às vezes aplicado ao processo de sinalização do uso suspeito da linguagem. Ferramentas semelhantes ao lint geralmente realizam análise estática do código fonte.</i></p>\n</blockquote>\n<p>Em linguagens compiladas de tipagem estática, como Java, IDEs (Integrated Development Environment [Ambiente de Desenvolvimento Integrado]) como o NetBeans podem apontar erros no código, inclusive aqueles que são mais do que apenas erros de compilação. Ferramentas adicionais que fazem <a href=\"https://en.wikipedia.org/wiki/Static_program_analysis\">análise estática</a> (static analysis), como <a href=\"https://checkstyle.sourceforge.io\">checkstyle</a>, podem ser usadas para expandir as capacidades da IDE e apontar também problemas relacionados ao estilo, como a indentação (indentation).</p>\n<p>No universo JavaScript, a ferramenta líder atual para análise estática, também conhecida como \"linting\", é o <a href=\"https://eslint.org/\">ESlint</a>.</p>\n<p>Vamos instalar o ESlint como uma dependência de desenvolvimento no projeto backend com o comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> eslint --save-dev</code></pre></div>\n<p>Após isso, podemos inicializar uma configuração padrão do ESlint com o comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx eslint <span class=\"token parameter variable\">--init</span></code></pre></div>\n<p>Responderemos à todas as perguntas:</p>\n<picture><img src=\"/static/a7cfec0c6a43ac7e5580e7ea1a9b0260/5a190/52new.png\" alt=\"saída do terminal proveniente do comando &#x27;eslint --init&#x27;\" srcset=\"/static/a7cfec0c6a43ac7e5580e7ea1a9b0260/772e8/52new.png 200w,\n/static/a7cfec0c6a43ac7e5580e7ea1a9b0260/e17e5/52new.png 400w,\n/static/a7cfec0c6a43ac7e5580e7ea1a9b0260/5a190/52new.png 800w,\n/static/a7cfec0c6a43ac7e5580e7ea1a9b0260/c1b63/52new.png 1200w,\n/static/a7cfec0c6a43ac7e5580e7ea1a9b0260/29007/52new.png 1600w,\n/static/a7cfec0c6a43ac7e5580e7ea1a9b0260/fb937/52new.png 1820w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>A configuração será salva no arquivo <em>.eslintrc.js</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'env'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'commonjs'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'es2021'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token string-property property\">'node'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'extends'</span><span class=\"token operator\">:</span> <span class=\"token string\">'eslint:recommended'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'parserOptions'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'ecmaVersion'</span><span class=\"token operator\">:</span> <span class=\"token string\">'latest'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'rules'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'indent'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token number\">4</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'linebreak-style'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'unix'</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'quotes'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'single'</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'semi'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'never'</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vamos mudar imediatamente a regra relacionada à indentação, para que o nível de indentação (ou nível de recuo) seja de dois espaços.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string-property property\">\"indent\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">2</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Inspeciona-se e valida-se um arquivo como <em>index.js</em> da seguinte maneira:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx eslint index.js</code></pre></div>\n<p>Recomenda-se criar um  <em>npm script</em> separado para a análise estática (linting):</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node index.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nodemon index.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint .\"</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Agora o comando <em>npm run lint</em> verificará todos os arquivos do projeto.</p>\n<p>Também são verificados os arquivos do diretório <em>build</em> quando o comando é executado. Não queremos que isso aconteça; podemos impedir essa análise criando um arquivo <a href=\"https://eslint.org/docs/user-guide/configuring#ignoring-files-and-directories\">.eslintignore</a> na raiz do projeto adicionando o seguinte:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">build</code></pre></div>\n<p>Isso faz com que o diretório inteiro <em>build</em> não seja verificado pelo ESlint.</p>\n<p>O lint tem bastante a dizer sobre o nosso código:</p>\n<picture><img src=\"/static/cdf7d27db507f48c4ab9f7bd59f8071f/5a190/53ea.png\" alt=\"saída de erros ESlint no terminal\" srcset=\"/static/cdf7d27db507f48c4ab9f7bd59f8071f/772e8/53ea.png 200w,\n/static/cdf7d27db507f48c4ab9f7bd59f8071f/e17e5/53ea.png 400w,\n/static/cdf7d27db507f48c4ab9f7bd59f8071f/5a190/53ea.png 800w,\n/static/cdf7d27db507f48c4ab9f7bd59f8071f/c1b63/53ea.png 1200w,\n/static/cdf7d27db507f48c4ab9f7bd59f8071f/d7ceb/53ea.png 1446w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Mas não vamos corrigir esses problemas ainda.</p>\n<p>Uma melhor forma de executar o linter a partir da linha de comando é configurar um <i>eslint-plugin</i> no editor, que executará o linter continuamente. Assim que usar o plugin, você verá erros no seu código imediatamente. É possível encontrar mais informações sobre o plugin Visual Studio ESLint <a href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\">aqui</a>.</p>\n<p>O plugin ESlint do VS Code sublinhará as violações de estilo com uma linha vermelha:</p>\n<picture><img src=\"/static/64cf2fbae36000083aa1e48292aed8f2/5a190/54a.png\" alt=\"captura de tela do plugin do vscode ESlint exibindo erros\" srcset=\"/static/64cf2fbae36000083aa1e48292aed8f2/772e8/54a.png 200w,\n/static/64cf2fbae36000083aa1e48292aed8f2/e17e5/54a.png 400w,\n/static/64cf2fbae36000083aa1e48292aed8f2/5a190/54a.png 800w,\n/static/64cf2fbae36000083aa1e48292aed8f2/c1b63/54a.png 1200w,\n/static/64cf2fbae36000083aa1e48292aed8f2/29007/54a.png 1600w,\n/static/64cf2fbae36000083aa1e48292aed8f2/17009/54a.png 1932w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Isso torna os erros fáceis de detectar e corrigir imediatamente.</p>\n<p>O ESlint tem uma vasta variedade de <a href=\"https://eslint.org/docs/rules/\">regras</a>, das quais são fáceis de usar por meio do arquivo <i>.eslintrc.js</i>.</p>\n<p>Vamos adicionar a regra <a href=\"https://eslint.org/docs/rules/eqeqeq\">eqeqeq</a> que nos alerta se a igualdade é verificada com algo que não seja o operador de igualdade estrita. A regra é adicionada sob o campo <i>rules</i> no arquivo de configuração.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token string-property property\">'rules'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n   <span class=\"token string-property property\">'eqeqeq'</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Já que estamos configurando essa parte, vamos fazer algumas outras mudanças nas regras.</p>\n<p>Vamos evitar <a href=\"https://eslint.org/docs/rules/no-trailing-spaces\">espaços à direita (ou no final da cadeia)</a> (trailing spaces) ao final das linhas, exigir que <a href=\"https://eslint.org/docs/rules/object-curly-spacing\">sempre haja um espaço antes e depois das chaves</a> e também exigir um uso consistente de espaços em branco nos parâmetros de funções de seta.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token string-property property\">'rules'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string-property property\">'eqeqeq'</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'no-trailing-spaces'</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'object-curly-spacing'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'always'</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'arrow-spacing'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'before'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'after'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nossa configuração padrão usa uma série de regras pré-determinadas da regra <i>eslint:recommended</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">'extends'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'eslint:recommended'</span>,</code></pre></div>\n<p>Isso inclui uma regra que avisa sobre comandos <em>console.log</em>. Para <a href=\"https://eslint.org/docs/user-guide/configuring#configuring-rules\">desabilitar</a> uma regra, é necessário que seu \"valor\" seja definido como 0 no arquivo de configuração. Vamos fazer isso para a regra <i>no-console</i> por enquanto.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token string-property property\">'rules'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string-property property\">'eqeqeq'</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'no-trailing-spaces'</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'object-curly-spacing'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'always'</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'arrow-spacing'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'before'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'after'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token string-property property\">'no-console'</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Obs.:</strong> quando se faz alterações no arquivo <i>.eslintrc.js</i>, é recomendado executar o linter a partir da linha de comando. Isso irá verificar se o arquivo de configuração está formatado corretamente:</p>\n<picture><img src=\"/static/683365a382c607616d65e603f8d8d39a/5a190/55.png\" alt=\"saída do terminal como resultado do comando &#x27;npm run lint&#x27;\" srcset=\"/static/683365a382c607616d65e603f8d8d39a/772e8/55.png 200w,\n/static/683365a382c607616d65e603f8d8d39a/e17e5/55.png 400w,\n/static/683365a382c607616d65e603f8d8d39a/5a190/55.png 800w,\n/static/683365a382c607616d65e603f8d8d39a/c1b63/55.png 1200w,\n/static/683365a382c607616d65e603f8d8d39a/29007/55.png 1600w,\n/static/683365a382c607616d65e603f8d8d39a/7575b/55.png 1608w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>O plugin do lint irá se comportar incorretamente se houver algo errado em seu arquivo de configuração.</p>\n<p>Muitas empresas definem padrões de código que são aplicados em toda a organização por meio do arquivo de configuração do ESlint. Não é recomendado reinventar a roda toda vez, e pode ser até uma boa ideia adotar uma configuração pré-pronta do projeto de outra pessoa no seu. Muitos projetos adotaram recentemente o <a href=\"https://github.com/airbnb/javascript\">guia de estilo Javascript</a> da Airbnb, adotando a <a href=\"https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb\">configuração do ESlint da empresa</a>.</p>\n<p>É possível encontrar o código da nossa aplicação atual na íntegra na branch <i>part3-6</i> <a href=\"https://github.com/fullstack-hy2020/part3-notes-backend/tree/part3-6\">neste repositório do GitHub</a>.</p>\n</div>\n<div class=\"tasks\">\n<h3>Exercício 3.22</h3>\n<h4>3.22: Configuração do Lint</h4>\n<p>Adicione o ESlint à sua aplicação e corrija todos os avisos.</p>\n<p>Este foi o último exercício para esta parte do curso, e é hora de enviar seu código para o GitHub e marcar todos os seus exercícios concluídos na guia \"my submissions\" do <a href=\"https://studies.cs.helsinki.fi/stats/courses/fullstackopen\">sistema de envio de exercícios</a>.</p>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/8ac7bc0fb2b7018a7853b00c454b2103/part-3.svg"},"part":3,"letter":"d","lang":"ptbr"}}},"pageContext":{"part":3,"letter":"d","lang":"ptbr"}},"staticQueryHashes":["3128451518"]}