{"componentChunkName":"component---src-templates-content-template-js","path":"/fr/part1/premiers_pas_avec_react","result":{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<p>Nous allons maintenant commencer à nous familiariser avec probablement le sujet le plus important de ce cours, à savoir la bibliothèque <a href=\"https://react.dev/\">React</a>. Commençons par créer une application React simple et découvrir les concepts de base de React.</p>\n<p>Le moyen le plus simple de commencer de loin est d'utiliser un outil appelé <a href=\"https://vitejs.dev/\">Vite</a>.</p>\n<p>Nous allons créer une application appelée <i>part1</i>, accédons à son répertoire et installons les bibliothèques :</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># npm 6.x (obsolète, mais encore utilisé par certains) :</span>\n<span class=\"token function\">npm</span> create vite@latest part1 <span class=\"token parameter variable\">--template</span> react\n\n<span class=\"token comment\"># npm 7+, un double tiret supplémentaire est nécessaire :</span>\n<span class=\"token function\">npm</span> create vite@latest part1 -- <span class=\"token parameter variable\">--template</span> react</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> part1\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span></code></pre></div>\n<p>L'application est exécutée comme suit</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run dev</code></pre></div>\n<p>Le terminal affiche que l'application a démarré sur le port localhost 5173, c'est-à-dire à l'adresse <a href=\"http://localhost:5173/\">http://localhost:5173/</a> :</p>\n<picture><img src=\"/static/351b69b3e5d9c096040fdffd9ba004c6/5a190/1-vite1.png\" alt=\"Image\" srcset=\"/static/351b69b3e5d9c096040fdffd9ba004c6/772e8/1-vite1.png 200w,\n/static/351b69b3e5d9c096040fdffd9ba004c6/e17e5/1-vite1.png 400w,\n/static/351b69b3e5d9c096040fdffd9ba004c6/5a190/1-vite1.png 800w,\n/static/351b69b3e5d9c096040fdffd9ba004c6/5819f/1-vite1.png 1042w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Par défaut, Vite démarre l'application sur le port 5173. Si ce port n'est pas disponible, Vite utilisera le numéro de port suivant disponible.</p>\n<p>Ouvrez le navigateur et un éditeur de texte pour pouvoir afficher le code ainsi que la page Web en même temps à l'écran :</p>\n<picture><img src=\"/static/69d2f3a26b31ab0723f4e119690005b0/5a190/1-vite4.png\" alt=\"Image\" srcset=\"/static/69d2f3a26b31ab0723f4e119690005b0/772e8/1-vite4.png 200w,\n/static/69d2f3a26b31ab0723f4e119690005b0/e17e5/1-vite4.png 400w,\n/static/69d2f3a26b31ab0723f4e119690005b0/5a190/1-vite4.png 800w,\n/static/69d2f3a26b31ab0723f4e119690005b0/c1b63/1-vite4.png 1200w,\n/static/69d2f3a26b31ab0723f4e119690005b0/29007/1-vite4.png 1600w,\n/static/69d2f3a26b31ab0723f4e119690005b0/1e1c3/1-vite4.png 1670w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Le code de l'application se trouve dans le dossier <i>src</i>. Simplifions le code par défaut de telle sorte que le contenu du fichier <i>main.jsx</i> ressemble à ceci :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/client'</span>\n\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>et le fichier <i>App.js</i> ressemble à ceci</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello world<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Les fichiers <i>App.css</i> et <i>index.css</i>, ainsi que le répertoire <i>assets</i>, peuvent être supprimés car ils ne sont pas nécessaires dans notre application pour le moment.</p>\n<h3>create-react-app</h3>\n<p>Au lieu de Vite, vous pouvez également utiliser l'outil de la génération précédente create-react-app dans le cours pour configurer les applications. La différence la plus visible par rapport à Vite est le nom du fichier de démarrage de l'application, qui est <i>index.js</i>.</p>\n<p>La manière de démarrer l'application est également différente dans CRA, elle est lancée avec la commande</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> start</code></pre></div>\n<p>contrairement à Vite qui utilise</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run dev</code></pre></div>\n<p>Le cours est actuellement (11 août 2023) en cours de mise à jour pour utiliser Vite. Certaines marques peuvent toujours utiliser la base d'application créée avec create-react-app.</p>\n<h3>Composant</h3>\n<p>Le fichier <i>App.js</i> définit maintenant un <a href=\"https://reactjs.org/docs/components-and-props.html\">composant React</a> avec le nom <i>App</i>. La commande sur la dernière ligne du fichier <i>index.js</i></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>rend son contenu dans l'élément <i>div</i>, défini dans le fichier <i>public/index.html</i>, ayant la valeur <i>id</i> 'root'.</p>\n<p>Par défaut, le fichier <i>index.html</i> ne contient aucune balise HTML visible pour nous dans le navigateur :</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">doctype</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/svg+xml<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/vite.svg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Vite + React<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/main.jsx<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Vous pouvez essayer d'ajouter du HTML dans le fichier. Cependant, lors de l'utilisation de React, tout le contenu qui doit être rendu est généralement défini sous forme de composants React.</p>\n<p>Jetons un coup d'oeil plus attentif au code qui définit le composant :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello world<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Comme vous l'avez probablement deviné, le composant sera rendu sous la forme d'une balise <i>div</i>, qui enveloppe une balise <i>p</i> contenant le texte <i>Hello world</i>.</p>\n<p>Techniquement, le composant est défini comme une fonction JavaScript. Voici une fonction (qui ne reçoit aucun paramètre) :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello world<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>La fonction est alors affectée à une variable constante <i>App</i> :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> App <span class=\"token operator\">=</span> <span class=\"token operator\">...</span></code></pre></div>\n<p>Il existe plusieurs façons de définir des fonctions en JavaScript. Ici, nous utiliserons les <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">fonctions fléchées</a>, qui sont décrites dans une version plus récente de JavaScript connue sous le nom de <a href=\"http://es6-features.org/#Constants\">ECMAScript 6 </a>, également appelé ES6.</p>\n<p>Parce que la fonction se compose d'une seule expression, nous avons utilisé un raccourci, qui représente ce morceau de code :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello world<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>En d'autres termes, la fonction renvoie la valeur de l'expression.</p>\n<p>La fonction définissant le composant peut contenir n'importe quel type de code JavaScript. Modifiez votre composant pour qu'il soit comme suit</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello from component'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello world<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>et observez ce qui se passe dans la console :</p>\n<picture><img src=\"/static/4a9dce49d75016ac6b0a1ef1671816b3/5a190/30.png\" alt=\"console du navigateur affichant la console avec une flèche pointant vers &#x22;Hello from component&#x22;\" srcset=\"/static/4a9dce49d75016ac6b0a1ef1671816b3/772e8/30.png 200w,\n/static/4a9dce49d75016ac6b0a1ef1671816b3/e17e5/30.png 400w,\n/static/4a9dce49d75016ac6b0a1ef1671816b3/5a190/30.png 800w,\n/static/4a9dce49d75016ac6b0a1ef1671816b3/c1b63/30.png 1200w,\n/static/4a9dce49d75016ac6b0a1ef1671816b3/29007/30.png 1600w,\n/static/4a9dce49d75016ac6b0a1ef1671816b3/c6720/30.png 1922w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>La première règle du développement web côté client :</p>\n<blockquote>\n<p><i>gardez la console ouverte en permanence</i></p>\n</blockquote>\n<p>Répétons ceci ensemble : <i>je promets de garder la console ouverte en permanence</i> pendant ce cours, et pour le reste de ma vie lorsque je fais du développement web.</p>\n<p>Il est également possible de rendre du contenu dynamique à l'intérieur d'un composant.</p>\n<p>Modifiez le composant comme suit :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> now <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n  <span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello world<span class=\"token punctuation\">,</span> it is <span class=\"token punctuation\">{</span>now<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">}</span> plus <span class=\"token punctuation\">{</span>b<span class=\"token punctuation\">}</span> is <span class=\"token punctuation\">{</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Tout code JavaScript à l'intérieur des accolades est évalué et le résultat de cette évaluation est intégré à l'emplacement défini dans le code HTML produit par le composant.</p>\n<p>Notez que vous ne devez pas supprimer la ligne en bas du composant</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>L'exportation n'est pas affichée dans la plupart des exemples du matériel du cours. Sans l'exportation, le composant et toute l'application ne fonctionnent pas.</p>\n<p>Vous souvenez-vous de votre promesse de garder la console ouverte ? Qu'y a-t-il été imprimé ?</p>\n<h3>JSX</h3>\n<p>Il semble que les composants React renvoient le balisage HTML. Cependant, ce n'est pas le cas. La disposition des composants React est principalement écrite à l'aide de <a href=\"https://reactjs.org/docs/introducing-jsx.html\">JSX</a>. Bien que JSX ressemble à du HTML, nous avons en fait affaire à un moyen d'écrire du JavaScript. Sous le capot, le JSX renvoyé par les composants React est compilé en JavaScript.</p>\n<p>Après compilation, notre application ressemble à ceci :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> now <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n  <span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n  <span class=\"token keyword\">return</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hello world, it is '</span><span class=\"token punctuation\">,</span> now<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> <span class=\"token string\">' plus '</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> <span class=\"token string\">' is '</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">+</span> b\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>La compilation est gérée par <a href=\"https://babeljs.io/repl/\">Babel</a>. Les projets créés avec <em>create-react-app</em> ou <em>vite</em> sont configurés pour se compiler automatiquement. Nous en apprendrons plus sur ce sujet dans la <a href=\"/en/part7\">partie 7</a> de ce cours.</p>\n<p>Il est également possible d'écrire React en \"pur JavaScript\" sans utiliser JSX. Bien que personne avec un esprit sain ne le ferait réellement.</p>\n<p>En pratique, JSX ressemble beaucoup au HTML, à la différence qu'avec JSX, vous pouvez facilement intégrer du contenu dynamique en écrivant du JavaScript approprié entre accolades. L'idée de JSX est assez similaire à de nombreux moteurs de templates, tels que Thymeleaf utilisé avec Java Spring, qui sont utilisés sur les serveurs.</p>\n<p>JSX est \"<a href=\"https://developer.mozilla.org/en-US/docs/Web/XML/XML_introduction\">XML</a>-like\", ce qui signifie que chaque balise doit être fermée. Par exemple, une nouvelle ligne est un élément vide, qui en HTML peut être écrit comme suit :</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>mais lors de l'écriture de JSX, la balise doit être fermée :</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<h3>Composants multiples</h3>\n<p>Modifions le fichier <i>App.jsx</i> comme suit :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Hello</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello world<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>Hello <span class=\"token operator\">/</span><span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous avons défini un nouveau composant <i>Hello</i> et l'avons utilisé dans le composant <i>App</i>. Naturellement, un composant peut être utilisé plusieurs fois :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Hello <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>Hello <span class=\"token operator\">/</span><span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>Hello <span class=\"token operator\">/</span><span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>NB</strong>: L'exportation (<em>export</em>) à la fin est omise dans ces <i>exemples</i>, maintenant et à l'avenir. Elle est toujours nécessaire pour que le code fonctionne.</p>\n<p>Écrire des composants avec React est facile, et en combinant des composants, même une application plus complexe peut rester assez maintenable. En effet, une philosophie centrale de React est de composer des applications à partir de nombreux composants spécialisés réutilisables.</p>\n<p>Une autre forte convention est l'idée d'un composant racine appelé <i>App</i> en haut de l'arborescence de composants de l'application. Néanmoins, comme nous le verrons dans <a href=\"/en/part6\">partie 6</a>, il y a des situations où le composant <i>App</i> n'est pas exactement la racine, mais il est enveloppé dans un composant utilitaire approprié.</p>\n<h3>props : transmission de données aux composants</h3>\n<p>Il est possible de transmettre des données aux composants à l'aide de ce qu'on appelle <a href=\"https://reactjs.org/docs/components-and-props.html\">props</a>.</p>\n<p>Modifions le composant <i>Hello</i> comme suit</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Hello</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Maintenant, la fonction définissant le composant a un paramètre <i>props</i>. En argument, le paramètre reçoit un objet, qui a des champs correspondant à toutes les \"props\" définis par l'utilisateur du composant.</p>\n<p>Les props sont définis comme suit :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token string\">\"George\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token string\">\"Daisy\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Il peut y avoir un nombre arbitraire de props et leurs valeurs peuvent être des chaînes \"codées en dur\" ou des résultats d'expressions JavaScript. Si la valeur de la prop est obtenue à l'aide de JavaScript, elle doit être entourée d'accolades.</p>\n<p>Modifions le code pour que le composant <i>Hello</i> utilise deux props :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Hello</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">        Hello <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> you are <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">}</span> years old</span>      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Peter'</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> age <span class=\"token operator\">=</span> <span class=\"token number\">10</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token string\">\"Maya\"</span> age<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">26</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span> age<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les props envoyées par le composant <i>App</i> sont les valeurs des variables, le résultat de l'évaluation de l'expression sum et une chaîne régulière.</p>\n<p>Le composant <i>Hello</i> enregistre également la valeur de l'objet props dans la console.</p>\n<p>J'espère vraiment que votre console était ouverte. Si ce n'était pas le cas, souvenez-vous de ce que vous avez promis :</p>\n<blockquote>\n<p><i>Je promets de garder la console ouverte en permanence pendant ce cours, et pour le reste de ma vie lorsque je fais du développement web.</i></p>\n</blockquote>\n<p>Le développement de logiciels est difficile. Cela devient encore plus difficile si l'on n'utilise pas tous les outils disponibles, tels que la console web et l'impression de débogage avec <em>console.log</em>. Les professionnels utilisent les deux <i>tout le temps</i>, et il n'y a aucune raison pour qu'un débutant n'adopte pas l'utilisation de ces merveilleuses méthodes d'aide qui faciliteront grandement la vie.</p>\n<h3>Message d'erreur possible</h3>\n<p>Selon l'éditeur que vous utilisez, vous pouvez recevoir le message d'erreur suivant à ce stade :</p>\n<picture><img src=\"/static/f60ddf389a14091ea5d9514a022e576f/5a190/1-vite5.png\" alt=\"Capture d&#x27;écran de l&#x27;erreur eslint\" srcset=\"/static/f60ddf389a14091ea5d9514a022e576f/772e8/1-vite5.png 200w,\n/static/f60ddf389a14091ea5d9514a022e576f/e17e5/1-vite5.png 400w,\n/static/f60ddf389a14091ea5d9514a022e576f/5a190/1-vite5.png 800w,\n/static/f60ddf389a14091ea5d9514a022e576f/c1b63/1-vite5.png 1200w,\n/static/f60ddf389a14091ea5d9514a022e576f/29007/1-vite5.png 1600w,\n/static/f60ddf389a14091ea5d9514a022e576f/e7aec/1-vite5.png 1726w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Il ne s'agit pas réellement d'une erreur, mais d'un avertissement généré par l'outil <a href=\"https://eslint.org/\">ESLint</a>. Vous pouvez supprimer l'avertissement <a href=\"https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/prop-types.md\">react/prop-types</a> en ajoutant à votre fichier <i>.eslintrc .cjs</i> la ligne suivante :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token literal-property property\">root</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">env</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">browser</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">es2020</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n     <span class=\"token string\">'eslint:recommended'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'plugin:react/recommended'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'plugin:react/jsx-runtime'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'plugin:react-hooks/recommended'</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">ignorePatterns</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'dist'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.eslintrc.cjs'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">parserOptions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">ecmaVersion</span><span class=\"token operator\">:</span> <span class=\"token string\">'latest'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">sourceType</span><span class=\"token operator\">:</span> <span class=\"token string\">'module'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">settings</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">react</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">version</span><span class=\"token operator\">:</span> <span class=\"token string\">'18.2'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'react-refresh'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token string-property property\">'react-refresh/only-export-components'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n       <span class=\"token string\">'warn'</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">allowConstantExport</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">     <span class=\"token string-property property\">'react/prop-types'</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span></span>   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous en apprendrons davantage sur ESLint en détail dans <a href=\"/osa3/validointi_ja_es_lint#lint\">la partie 3</a>.</p>\n<h3>Quelques notes</h3>\n<p>React a été configuré pour générer des messages d'erreur assez clairs. Malgré cela, vous devriez, du moins au début, avancer par <strong>de très petits pas</strong> et vous assurer que chaque modification fonctionne comme prévu.</p>\n<p><strong>La console doit toujours être ouverte</strong>. Si le navigateur signale des erreurs, il n'est pas recommandé de continuer à écrire du code en espérant des miracles. Vous devriez plutôt essayer de comprendre la cause de l'erreur et, par exemple, revenir à l'état précédent qui fonctionnait :</p>\n<picture><img src=\"/static/1fd0fdbea6365a324efc4f4367507f66/5a190/1-vite6.png\" alt=\"Capture d&#x27;écran de l&#x27;erreur de propriété non définie\" srcset=\"/static/1fd0fdbea6365a324efc4f4367507f66/772e8/1-vite6.png 200w,\n/static/1fd0fdbea6365a324efc4f4367507f66/e17e5/1-vite6.png 400w,\n/static/1fd0fdbea6365a324efc4f4367507f66/5a190/1-vite6.png 800w,\n/static/1fd0fdbea6365a324efc4f4367507f66/c1b63/1-vite6.png 1200w,\n/static/1fd0fdbea6365a324efc4f4367507f66/29007/1-vite6.png 1600w,\n/static/1fd0fdbea6365a324efc4f4367507f66/1ffbd/1-vite6.png 2108w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Comme nous l'avons déjà mentionné, lors de la programmation avec React, il est possible et utile d'écrire des commandes <em>console.log()</em> (qui affichent des messages dans la console) dans votre code.</p>\n<p>De plus, gardez à l'esprit que <strong>la première lettre des noms de composants React doit être en majuscule</strong>. Si vous essayez de définir un composant comme suit :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">footer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      greeting app created by <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"https://github.com/mluukkai\"</span><span class=\"token operator\">></span>mluukkai<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>et l'utiliser comme ça</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token string\">\"Maya\"</span> age<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">26</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>footer <span class=\"token operator\">/</span><span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>la page n'affichera pas le contenu défini dans le composant Footer, à la place, React crée uniquement un élément <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer\">footer</a> vide, c'est-à-dire l'élément HTML intégré au lieu de l'élément React personnalisé du même nom. Si vous remplacez la première lettre du nom du composant par une lettre majuscule, React crée un élément <i>div</i> défini dans le composant Footer, qui est rendu sur la page.</p>\n<p>Notez que le contenu d'un composant React doit (généralement) contenir <strong>un élément racine</strong>. Si nous essayons, par exemple, de définir le composant <i>App</i> sans l'élément <i>div</i> le plus externe :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token string\">\"Maya\"</span> age<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">26</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Footer <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Le résultat est un message d'erreur.</p>\n<picture><img src=\"/static/da442fb63308535124205c6f0bcbfe94/5a190/1-vite7.png\" alt=\"Capture d&#x27;écran de l&#x27;erreur de plusieurs éléments racine\" srcset=\"/static/da442fb63308535124205c6f0bcbfe94/772e8/1-vite7.png 200w,\n/static/da442fb63308535124205c6f0bcbfe94/e17e5/1-vite7.png 400w,\n/static/da442fb63308535124205c6f0bcbfe94/5a190/1-vite7.png 800w,\n/static/da442fb63308535124205c6f0bcbfe94/c1b63/1-vite7.png 1200w,\n/static/da442fb63308535124205c6f0bcbfe94/29007/1-vite7.png 1600w,\n/static/da442fb63308535124205c6f0bcbfe94/17d12/1-vite7.png 1666w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>L'utilisation d'un élément racine n'est pas la seule option de travail. Un <i>tableau</i> de composants est également une solution valide :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token string\">\"Maya\"</span> age<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">26</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">&lt;</span>Footer <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cependant, lors de la définition du composant racine de l'application, ce n'est pas une chose particulièrement judicieuse à faire, et cela rend le code un peu moche.</p>\n<p>Parce que l'élément racine est stipulé, nous avons des éléments div \"supplémentaires\" dans l'arbre DOM. Cela peut être évité en utilisant des <a href=\"https://reactjs.org/docs/fragments.html#short-syntax\">fragments</a>, c'est-à-dire en enveloppant les éléments à renvoyer par le composant avec un élément vide :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Peter'</span>\n  <span class=\"token keyword\">const</span> age <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token string\">\"Maya\"</span> age<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">26</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span> age<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Footer <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ca compile maintenant avec succès et le DOM généré par React ne contient plus l'élément div supplémentaire.</p>\n<h3>Ne pas rendre d'objets</h3>\n<p>Considérez une application qui affiche les noms et les âges de nos amis à l'écran :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> friends <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Peter'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Maya'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Cependant, rien n'apparaît à l'écran. J'ai essayé de trouver un problème dans le code pendant 15 minutes, mais je n'arrive pas à comprendre où pourrait se trouver le problème.</p>\n<p>Je me souviens enfin de la promesse que nous avons faite :</p>\n<blockquote>\n<p><i>Je promets de laisser la console ouverte en permanence pendant ce cours, et pour le reste de ma vie lorsque je fais du développement web</i></p>\n</blockquote>\n<p>La console s'affiche en rouge :</p>\n<picture><img src=\"/static/fdcc65efff174e0c0ce15bf636c4cd1c/5a190/34new.png\" alt=\"Outils de développement affichant une erreur avec une mise en évidence autour de &#x22;Les objets ne sont pas valides en tant qu&#x27;enfant React&#x22;\" srcset=\"/static/fdcc65efff174e0c0ce15bf636c4cd1c/772e8/34new.png 200w,\n/static/fdcc65efff174e0c0ce15bf636c4cd1c/e17e5/34new.png 400w,\n/static/fdcc65efff174e0c0ce15bf636c4cd1c/5a190/34new.png 800w,\n/static/fdcc65efff174e0c0ce15bf636c4cd1c/c1b63/34new.png 1200w,\n/static/fdcc65efff174e0c0ce15bf636c4cd1c/29007/34new.png 1600w,\n/static/fdcc65efff174e0c0ce15bf636c4cd1c/cc6fe/34new.png 1860w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Le coeur du problème est que <i>les objets ne sont pas valides en tant qu'enfant React</i>, c'est-à-dire que l'application tente de rendre des <i>objets</i> et échoue.</p>\n<p>Le code tente de rendre les informations d'un ami comme suit</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></code></pre></div>\n<p>et cela pose problème car l'élément à rendre entre les accolades est un objet.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Peter'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>En React, les éléments individuels rendus entre accolades doivent être des valeurs primitives, telles que des nombres ou des chaînes.</p>\n<p>La correction est la suivante</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> friends <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Peter'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Maya'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Maintenant, le nom de l'ami est rendu séparément entre les accolades</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></code></pre></div>\n<p>et l'âge</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Après avoir corrigé l'erreur, vous devriez effacer les messages d'erreur de la console en appuyant sur 🚫, puis recharger le contenu de la page et vous assurer qu'aucun message d'erreur n'apparaît.</p>\n<p>Une petite note supplémentaire par rapport à la précédente. React permet également de rendre des tableaux <i>si</i> le tableau contient des valeurs éligibles pour le rendu (telles que des nombres ou des chaînes). Ainsi, le programme suivant fonctionnerait, bien que le résultat ne soit peut-être pas celui que nous souhaitons :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> friends <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'Peter'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Maya'</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans cette partie, il n'est même pas utile d'essayer d'utiliser le rendu direct des tableaux, nous y reviendrons dans la prochaine partie.</p>\n</div>\n<div class=\"tasks\">\n  <h3>Exercices 1.1.-1.2.</h3>\n<p>Les exercices sont soumis via GitHub et en marquant les exercices terminés sur le <a href=\"https://studies.cs.helsinki.fi/stats/courses/fullstackopen\">système de soumission</a>.</p>\n<p>Vous pouvez soumettre tous les exercices de ce cours dans le même référentiel ou utiliser plusieurs référentiels. Si vous soumettez des exercices de différentes parties dans le même référentiel, veuillez utiliser un schéma de nommage raisonnable pour les répertoires.</p>\n<p>Une structure de fichiers très fonctionnelle pour le référentiel de soumission est la suivante :</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">part0\npart1\n  courseinfo\n  unicafe\n  anecdotes\npart2\n  phonebook\n  countries</code></pre></div>\n<p>Voir cet <a href=\"https://github.com/fullstack-hy2020/example-submission-repository\">exemple de dépôt de soumission</a> !</p>\n<p>Pour chaque partie du cours, il y a un répertoire, qui se ramifie ensuite en sous-répertoires contenant une série d'exercices, comme \"unicafe\" pour la partie 1.</p>\n<p>Pour chaque application web d'une série d'exercices, il est recommandé de soumettre tous les fichiers relatifs à cette application, à l'exception du répertoire <i>node_modules</i>.</p>\n<p>Les exercices sont soumis <strong>une partie à la fois</strong>. Lorsque vous avez soumis les exercices d'une partie du cours, vous ne pouvez plus soumettre d'exercices non terminés pour la même partie.</p>\n<p>Notez que dans cette partie, il y a plus d'exercices que ceux trouvés ci-dessous. <i>Ne soumettez pas votre travail</i> tant que vous n'avez pas terminé tous les exercices que vous souhaitez soumettre pour la partie correspondante.</p>\n <h4>1.1 : courseinfo, étape 1</h4>\n<p><i>L'application sur laquelle nous allons commencer à travailler dans cet exercice sera développée plus en détail dans quelques-uns des exercices suivants. Dans cette série d'exercices et d'autres à venir dans ce cours, il suffit de soumettre uniquement l'état final de l'application. Si vous le souhaitez, vous pouvez également créer un commit pour chaque exercice de la série, mais cela est facultatif.</i></p>\n<p>Utilisez create-react-app pour initialiser une nouvelle application. Modifiez <i>index.js</i> pour qu'il corresponde à ce qui suit</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/client'</span>\n\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>et <i>App.js</i> pour correspondre à l'élément suivant</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> course <span class=\"token operator\">=</span> <span class=\"token string\">'Half Stack application development'</span>\n  <span class=\"token keyword\">const</span> part1 <span class=\"token operator\">=</span> <span class=\"token string\">'Fundamentals of React'</span>\n  <span class=\"token keyword\">const</span> exercises1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n  <span class=\"token keyword\">const</span> part2 <span class=\"token operator\">=</span> <span class=\"token string\">'Using props to pass data'</span>\n  <span class=\"token keyword\">const</span> exercises2 <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n  <span class=\"token keyword\">const</span> part3 <span class=\"token operator\">=</span> <span class=\"token string\">'State of a component'</span>\n  <span class=\"token keyword\">const</span> exercises3 <span class=\"token operator\">=</span> <span class=\"token number\">14</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>course<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>part1<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>exercises1<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>part2<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>exercises2<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>part3<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>exercises3<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Number <span class=\"token keyword\">of</span> exercises <span class=\"token punctuation\">{</span>exercises1 <span class=\"token operator\">+</span> exercises2 <span class=\"token operator\">+</span> exercises3<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>et supprimer les fichiers supplémentaires (App.css, App.test.js, index.css, logo.svg, setupTests.js, reportWebVitals.js).</p>\n<p>Malheureusement, toute l'application se trouve dans le même composant. Refactorisez le code afin qu'il se compose de trois nouveaux composants : <i>Header</i>, <i>Content</i> et <i>Total</i>. Toutes les données résident toujours dans le composant <i>App</i>, qui transmet les données nécessaires à chaque composant à l'aide des <i>props</i>. <i>Header</i> se charge de restituer le nom du cours, <i>Content</i> restitue les parties et leur nombre d'exercices et <i>Total</i> restitue le nombre total d'exercices.</p>\n<p>Définissez les nouveaux composants dans le fichier <i>App.js</i>.</p>\n<p>Le corps du composant <i>App</i> sera approximativement comme suit :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// const-definitions</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Header course<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>course<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Content <span class=\"token operator\">...</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Total <span class=\"token operator\">...</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>ATTENTION</strong> create-react-app transforme automatiquement le projet en référentiel git, sauf si l'application est créée dans un référentiel déjà existant. Très probablement, vous <strong>ne voulez pas</strong> que le projet devienne un référentiel, alors exécutez la commande <em>rm -rf .git</em> à la racine du projet.</p>\n<h4>1.2 : courseinfo, étape 2</h4>\n<p>Refactorisez le composant <i>Content</i> afin qu'il n'affiche pas les noms des parties ou leur nombre d'exercices par lui-même. Au lieu de cela, il ne rend que trois composants <i>Part</i> dont chacun rend le nom et le nombre d'exercices d'une partie.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Content <span class=\"token operator\">=</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Part <span class=\"token operator\">...</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Part <span class=\"token operator\">...</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Part <span class=\"token operator\">...</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Notre application transmet des informations de manière assez primitive pour le moment, car elle est basée sur des variables individuelles. Cette situation va bientôt s'améliorer.</p>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/83f1c8a7795e9e8eaffaec29b1ee79b1/part-1.svg"},"part":1,"letter":"a","lang":"fr"}}},"pageContext":{"part":1,"letter":"a","lang":"fr"}},"staticQueryHashes":["3128451518"]}