{"componentChunkName":"component---src-templates-content-template-js","path":"/es/part2/renderizando_una_coleccion_modulos","result":{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<p>Antes de comenzar una nueva parte, recapitulemos algunos de los temas que resultaron difíciles el año pasado.</p>\n<h3>console.log</h3>\n<p><strong><em>¿Cuál es la diferencia entre un programador de JavaScript experimentado y un novato? El experimentado usa console.log de 10 a 100 veces más.</em></strong></p>\n<p>Paradójicamente, esto parece ser cierto aunque un programador novato necesitaría <em>console.log</em> (o cualquier método de depuración) más que uno experimentado.</p>\n<p>Cuando algo no funciona, no adivines qué está mal. En su lugar, usa la consola o utiliza alguna otra forma de depuración.</p>\n<p><strong>NB</strong> Como se explicó en la parte 1, cuando uses el comando <em>console.log</em> para depurar, no concatenes cosas 'al estilo Java' con un signo de sumar. En lugar de escribir:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'props value is'</span> <span class=\"token operator\">+</span> props<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Separa las cosas que se van a imprimir con una coma:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'props value is'</span><span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Si concatenas un objeto con una cadena y lo registras en la consola (como en nuestro primer ejemplo), el resultado será bastante inútil:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">props value is <span class=\"token punctuation\">[</span>Object object<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Por el contrario, cuando pasas objetos como argumentos distintos separados por comas a <em>console.log</em>, como en nuestro segundo ejemplo anterior, el contenido del objeto se imprime en la consola del desarrollador como cadenas que nos aportan información util.\nSi es necesario, lee más sobre la depuración de aplicaciones React <a href=\"/es/part1/un_estado_mas_complejo_depurando_aplicaciones_react#depuracion-de-aplicaciones-react\">aquí</a>.</p>\n<h3>Protip: fragmentos de código de Visual Studio</h3>\n<p>Con Visual Studio Code es fácil crear 'snippets', es decir, accesos directos para generar rápidamente porciones de código que se reutilizan habitualmente, muy parecido a cómo funciona 'sout' en Netbeans.</p>\n<p>Las instrucciones para crear snippets se pueden encontrar <a href=\"https://code.visualstudio.com/docs/editor/userdefinedsnippets#_creating-your-own-snippets\">aquí</a>.</p>\n<p>También se pueden encontrar snippets útiles y listos para usar como complementos de VS Code, por ejemplo, <a href=\"https://marketplace.visualstudio.com/items?itemName=xabikos.ReactSnippets\">aquí</a>.</p>\n<p>El snippet más importante es el del comando <em>console.log()</em>, por ejemplo <em>clog</em>. Esto se puede crear así:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"console.log\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"prefix\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"clog\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"body\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"console.log('$1')\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Log output to console\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Depurar tu código usando <em>console.log()</em> es tan común que Visual Studio Code tiene ese fragmento integrado. Para usarlo, escribe <em>log</em> y presiona tabulador para autocompletar. Extensiones de snippets de <em>console.log()</em> más completos pueden encontrarse en el <a href=\"https://marketplace.visualstudio.com/search?term=console.log&#x26;target=VSCode&#x26;category=All%20categories&#x26;sortBy=Relevance\">marketplace</a>.</p>\n<h3>Matrices JavaScript</h3>\n<p>De aquí en adelante, usaremos los métodos de programación funcional de JavaScript <a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array\">array</a> -como <em>find</em> , <em>filter</em> y <em>map</em> - todo el tiempo.</p>\n<p>Si la programación funcional con matrices te parece ajena, vale la pena ver al menos las tres primeras partes de la serie de videos de YouTube <a href=\"https://www.youtube.com/playlist?list=PL0zVEGEvSaeEd9hlmCXrk5yUyqUag-n84\">Programación funcional en JavaScript</a>:</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=BMUiFMZr7vk&#x26;list=PL0zVEGEvSaeEd9hlmCXrk5yUyqUag-n84\">Higher-order functions</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=bCqtb-Z5YGQ&#x26;list=PL0zVEGEvSaeEd9hlmCXrk5yUyqUag-n84&#x26;index=2\">Map</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=Wl98eZpkp-c&#x26;t=31s\">Reduce basics</a></li>\n</ul>\n<h3>Controladores de eventos revisados</h3>\n<p>Según el curso del año pasado, el manejo de eventos ha demostrado ser difícil.</p>\n<p>Vale la pena leer el capítulo de revisión al final de la parte anterior <a href=\"/es/part1/un_estado_mas_complejo_depurando_aplicaciones_react#manejo-de-eventos-revisado\">revisión de los controladores de eventos</a>, si cree que su propio conocimiento sobre el tema necesita algo de mejora.</p>\n<p>Pasar controladores de eventos a los componentes secundarios del componente <i>App</i> ha planteado algunas preguntas. Se puede encontrar una pequeña revisión sobre el tema <a href=\"/es/part1/un_estado_mas_complejo_depurando_aplicaciones_react#pasando-controladores-de-eventos-a-componentes-hijos\">aquí</a>.</p>\n<h3>Renderizando colecciones</h3>\n<p>Ahora haremos el 'frontend', o la lógica de la aplicación del lado del navegador, en React para una aplicación que es similar a la aplicación de ejemplo de la <a href=\"/es/part0\">parte 0</a></p>\n<p>Comencemos con lo siguiente (en el archivo <em>App.jsx</em>):</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> notes <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Notes<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>notes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>notes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>notes<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>El archivo <em>main.jsx</em> se ve de esta forma:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/client'</span>\n\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\n<span class=\"token keyword\">const</span> notes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'HTML is easy'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'Browser can execute only JavaScript'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET and POST are the most important methods of HTTP protocol'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>App notes<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>notes<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cada nota contiene su contenido textual, y un valor <em>booleano</em> para marcar si la nota ha sido categorizada como importante o no, y también un <i>id</i> único.</p>\n<p>El ejemplo anterior funciona debido al hecho de que hay exactamente tres notas en la matriz.</p>\n<p>Se renderiza una sola nota al acceder a los objetos de la matriz haciendo referencia a un número de índice codificado:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>notes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span></code></pre></div>\n<p>Esto, por supuesto, no es práctico. Podemos mejorar esto generando elementos React a partir de los objetos de la matriz usando la función <a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array/map\">map</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">notes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">note</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>El resultado es una matriz de elementos <i>li</i>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span>\n  <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token constant\">HTML</span> is easy<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>Browser can execute only JavaScript<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token constant\">GET</span> and <span class=\"token constant\">POST</span> are the most important methods <span class=\"token keyword\">of</span> <span class=\"token constant\">HTTP</span> protocol<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Que luego se puede colocar dentro de las etiquetas <i>ul</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> notes <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Notes<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">{</span>notes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">note</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Debido a que el código que genera las etiquetas <i>li</i> es JavaScript, debe incluirse entre llaves en una plantilla JSX.</p>\n<!-- Parannetaan koodin luetteloa vielä jakamalla nuolifunktion määrittely useammalle riville: -->\n<p>También haremos que el código sea más legible separando la declaración de la función de flecha en varias líneas:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> notes <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Notes<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>notes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">note</span> <span class=\"token operator\">=></span> \n<span class=\"gatsby-highlight-code-line\">          <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">            <span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span></span>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Atributo key</h3>\n<p>Aunque la aplicación parece estar funcionando, hay una advertencia desagradable en la consola</p>\n<picture><img src=\"/static/fbe2815380db6eb1be707011330d79e1/5a190/1a.png\" alt=\"error en la consola: unique key prop\" srcset=\"/static/fbe2815380db6eb1be707011330d79e1/772e8/1a.png 200w,\n/static/fbe2815380db6eb1be707011330d79e1/e17e5/1a.png 400w,\n/static/fbe2815380db6eb1be707011330d79e1/5a190/1a.png 800w,\n/static/fbe2815380db6eb1be707011330d79e1/c1b63/1a.png 1200w,\n/static/fbe2815380db6eb1be707011330d79e1/29007/1a.png 1600w,\n/static/fbe2815380db6eb1be707011330d79e1/37c35/1a.png 1810w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Como la <a href=\"https://es.react.dev/learn/rendering-lists#keeping-list-items-in-order-with-key\">página</a> vinculada en el mensaje de error instruye, los elementos de la lista, es decir, los elementos generados por el método <em>map</em>, deben tener cada uno un valor de clave única: un atributo llamado <i>key</i>.</p>\n<p>Agreguemos las keys (claves):</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> notes <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Notes<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>notes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">note</span> <span class=\"token operator\">=></span> \n<span class=\"gatsby-highlight-code-line\">          <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span>            <span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Y el mensaje de error desaparece.</p>\n<p>React utiliza los atributos key de los objetos en una matriz para determinar cómo actualizar la vista generada por un componente cuando el componente se vuelve a renderizar. Más sobre esto <a href=\"https://es.react.dev/learn/preserving-and-resetting-state#option-2-resetting-state-with-a-key\">aquí</a>.</p>\n<h3>Map</h3>\n<p>Comprender cómo funciona el método de matriz <a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array/map\">map</a> es crucial para el resto del curso.</p>\n<p>La aplicación contiene una matriz llamada <em>notes</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> notes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'HTML is easy'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'Browser can execute only JavaScript'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET and POST are the most important methods of HTTP protocol'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Hagamos una pausa por un momento y examinemos cómo funciona <em>map</em>.</p>\n<p>Si se agrega el siguiente código, digamos, al final del archivo:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> notes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">note</span> <span class=\"token operator\">=></span> note<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></code></pre></div>\n<p><i>[1, 2, 3]</i> se imprimirá en la consola.\n<em>map</em> siempre crea una nueva matriz, cuyos elementos se han creado a partir de los elementos de la matriz original mediante <i>mapeo</i>: utilizando la función dada como parámetro al método <em>map</em>.</p>\n<p>La función es</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token parameter\">note</span> <span class=\"token operator\">=></span> note<span class=\"token punctuation\">.</span>id</code></pre></div>\n<p>Que es una función de flecha escrita en forma compacta. La forma completa sería:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token parameter\">note</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> note<span class=\"token punctuation\">.</span>id\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>La función obtiene un objeto de nota como parámetro, y <i>devuelve</i> el valor de su campo <i>id</i>.</p>\n<p>Cambiar el comando a:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> notes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">note</span> <span class=\"token operator\">=></span> note<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span></code></pre></div>\n<p>resulta en una matriz que contiene el contenido de las notas.</p>\n<p>Esto ya está bastante cerca del código de React que usamos:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">notes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">note</span> <span class=\"token operator\">=></span>\n  <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Que genera una etiqueta <i>li</i> que contiene el contenido de la nota de cada objeto de nota.</p>\n<p>Porque el parámetro de función pasado al método <em>map</em> -</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token parameter\">note</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span></code></pre></div>\n<p>  - se utiliza para crear elementos de vista, el valor de la variable debe representarse dentro de llaves. Intenta ver qué sucede si se quitan las llaves.</p>\n<p>El uso de llaves te causará dolor de cabeza al principio, pero pronto te acostumbrarás. La respuesta visual de React es inmediata.</p>\n<h3>Anti-patrón: índices de matriz como claves</h3>\n<p>Podríamos haber hecho desaparecer el mensaje de error en nuestra consola usando los índices de matriz como claves. Los índices se pueden recuperar pasando un segundo parámetro a la función de devolución de llamada del método map:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">notes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">note<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">...</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cuando se llama así, a <em>i</em> se le asigna el valor del índice de la posición en la matriz donde reside la nota.</p>\n<p>Como tal, una forma de definir la generación de filas sin obtener errores es:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">{</span>notes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">note<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> \n    <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span></code></pre></div>\n<p>Sin embargo, <strong>no se recomienda</strong> y puede causar problemas no deseados incluso si parece estar funcionando bien.</p>\n<p>Lee más sobre esto en <a href=\"https://robinpokorny.medium.com/index-as-a-key-is-an-anti-pattern-e0349aece318\">este articulo</a>.</p>\n<h3>Refactorizando módulos</h3>\n<p>Ordenemos un poco el código. Solo estamos interesados ​​en el campo <em>notes</em> de los props, así que recuperemos eso directamente usando <a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">desestructuración</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> notes <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Notes<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>notes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">note</span> <span class=\"token operator\">=></span> \n          <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Si has olvidado lo que significa la desestructuración y cómo funciona, revisa la <a href=\"/es/part1/estado_del_componente_controladores_de_eventos#desestructuracion\">sección de desestructuración</a>.</p>\n<p>Separamos la visualización de una sola nota en su propio componente <i>Note</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Note</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> note <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> notes <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Notes<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">{</span>notes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">note</span> <span class=\"token operator\">=></span> </span><span class=\"gatsby-highlight-code-line\">          <span class=\"token operator\">&lt;</span>Note key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span> note<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ten en cuenta que el atributo <i>key</i> ahora debe definirse para los componentes <i>Note</i>, y no para las etiquetas <i>li</i> como antes.</p>\n<p>Se puede escribir una aplicación React completa en un solo archivo. Aunque eso, por supuesto, no es muy práctico. La práctica común es declarar cada componente en su propio archivo como un <i>módulo ES6</i>.</p>\n<p>Hemos estado usando módulos todo el tiempo. Las primeras líneas del archivo <i>main.jsx</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/client\"</span>\n\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">\"./App\"</span></code></pre></div>\n<p><a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Statements/import\">importan</a> dos módulos, lo que les permite ser utilizados en ese archivo. El módulo <i>react-dom/client</i> se coloca en una variable llamada <em>React-DOM</em>, y el módulo que define el componente principal de la aplicación se coloca en la variable <em>App</em>.</p>\n<p>Movamos nuestro componente <i>Note</i> a su propio módulo.</p>\n<p>En aplicaciones más pequeñas, los componentes generalmente se colocan en un directorio llamado <i>components</i>, que a su vez se ubica dentro del directorio <i>src</i>. La convención es nombrar el archivo después del componente.</p>\n<p>Ahora crearemos un directorio llamado <i>components</i> para nuestra aplicación y colocaremos un archivo llamado <i>Note.jsx</i> dentro. El contenido del archivo es el siguiente:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Note</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> note <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Note</code></pre></div>\n<p>La última línea del módulo <a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Statements/export\">exporta</a> el módulo declarado, la variable <i>Note</i>.</p>\n<p>Ahora el archivo que está usando el componente - <i>App.jsx</i> - puede <a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Statements/import\">importar</a> el módulo:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> Note <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/Note'</span></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> notes <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>El componente exportado por el módulo ahora está disponible para su uso en la variable <i>Note</i>, al igual que antes.</p>\n<p>Ten en cuenta que al importar nuestros propios componentes, se debe dar su ubicación <i>en relación con el archivo de importación</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">'./components/Note'</span></code></pre></div>\n<p>El punto - <i>.</i> - al principio se refiere al directorio actual, por lo que la ubicación del módulo es un archivo llamado <i>Note.jsx</i> en el subdirectorio <i>components</i> del directorio actual. La extensión del nombre de archivo <em>.jsx</em> se puede omitir.</p>\n<p>Los módulos tienen muchos otros usos ademas de permitir separar las declaraciones de componentes en sus archivos propios. Volveremos a este tema más adelante en el curso.</p>\n<p>El código actual de la aplicación puede encontrarse en <a href=\"https://github.com/fullstack-hy2020/part2-notes-frontend/tree/part2-1\">GitHub</a>.</p>\n<p>Ten en cuenta que la rama <em>main</em> del repositorio contiene el código de una version posterior de la aplicación. El código actual está en la rama <a href=\"https://github.com/fullstack-hy2020/part2-notes-frontend/tree/part2-1\">part2-1</a>:</p>\n<picture><img src=\"/static/f356d587d39215504b8bd17318b6b603/5a190/2e.png\" alt=\"Captura de pantalla de la rama de GitHub\" srcset=\"/static/f356d587d39215504b8bd17318b6b603/772e8/2e.png 200w,\n/static/f356d587d39215504b8bd17318b6b603/e17e5/2e.png 400w,\n/static/f356d587d39215504b8bd17318b6b603/5a190/2e.png 800w,\n/static/f356d587d39215504b8bd17318b6b603/c1b63/2e.png 1200w,\n/static/f356d587d39215504b8bd17318b6b603/29007/2e.png 1600w,\n/static/f356d587d39215504b8bd17318b6b603/29beb/2e.png 1830w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Si clonas el proyecto, ejecuta el comando <em>npm install</em> antes de iniciar la aplicación con <em>npm run dev</em>.</p>\n<h3>Cuando la aplicación se rompe</h3>\n<p>Al principio de tu carrera como programador (e incluso después de 30 años codeando como es mi caso), lo que sucede a menudo es que la aplicación simplemente se rompe por completo. Esto es aún más común en el caso de los lenguajes tipados dinámicamente, como JavaScript, donde el compilador no verifica el tipo de datos de, por ejemplo, variables de función o valores de retorno.</p>\n<p>Una \"explosión de React\" puede, por ejemplo, verse así:</p>\n<picture><img src=\"/static/9c143a2eb0c5f22f1cbd162956cede9c/5a190/3-vite.png\" alt=\"error de muestra de react\" srcset=\"/static/9c143a2eb0c5f22f1cbd162956cede9c/772e8/3-vite.png 200w,\n/static/9c143a2eb0c5f22f1cbd162956cede9c/e17e5/3-vite.png 400w,\n/static/9c143a2eb0c5f22f1cbd162956cede9c/5a190/3-vite.png 800w,\n/static/9c143a2eb0c5f22f1cbd162956cede9c/c1b63/3-vite.png 1200w,\n/static/9c143a2eb0c5f22f1cbd162956cede9c/29007/3-vite.png 1600w,\n/static/9c143a2eb0c5f22f1cbd162956cede9c/1d499/3-vite.png 1632w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>En estas situaciones, la mejor salida es el método <em>console.log</em>.</p>\n<p>El fragmento de código que causa la explosión es este:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Course</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> course <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Header course<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>course<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> course <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Course course<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>course<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Investigaremos el motivo de la rotura agregando comandos <em>console.log</em> al código. Como lo primero que se renderiza es el componente <i>App</i>, vale la pena poner el primer <em>console.log</em> allí:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> course <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'App works...'</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">// ..</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Para ver la impresión en la consola, debemos desplazarnos hacia arriba sobre la larga pared roja de errores.</p>\n<picture><img src=\"/static/0f858d815c1abe509e04008e7d00d8d8/5a190/4b.png\" alt=\"impresión inicial de la consola\" srcset=\"/static/0f858d815c1abe509e04008e7d00d8d8/772e8/4b.png 200w,\n/static/0f858d815c1abe509e04008e7d00d8d8/e17e5/4b.png 400w,\n/static/0f858d815c1abe509e04008e7d00d8d8/5a190/4b.png 800w,\n/static/0f858d815c1abe509e04008e7d00d8d8/c1b63/4b.png 1200w,\n/static/0f858d815c1abe509e04008e7d00d8d8/29007/4b.png 1600w,\n/static/0f858d815c1abe509e04008e7d00d8d8/169e3/4b.png 1682w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Cuando se descubre que algo funciona, es hora de profundizar más. Si el componente se ha declarado como una sola declaración o una función sin retorno, hace que la impresión en la consola sea más difícil.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Course</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> course <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Header course<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>course<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>El componente debe cambiarse a su forma más larga para que agreguemos la impresión:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Course</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> course <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>course<span class=\"token punctuation\">)</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Header course<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>course<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Muy a menudo, la raíz del problema es que se espera que los props sean de un tipo diferente, o que se llamen con un nombre diferente al que realmente tienen, y la desestructuración falla como resultado. El problema a menudo comienza a resolverse por sí mismo cuando se elimina la desestructuración y vemos lo que realmente contienen los <em>props</em>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Course</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> course <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Header course<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>course<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Si el problema aún no se ha resuelto, realmente no hay mucho que hacer aparte de continuar la búsqueda de errores esparciendo más declaraciones <em>console.log</em> alrededor de tu código.</p>\n<p>Agregué este capítulo al material después de que la respuesta del modelo para la siguiente pregunta explotara por completo (debido a que los props eran del tipo incorrecto), y tuve que depurarlo usando <em>console.log</em>.</p>\n<h3>Juramento del desarrollador web</h3>\n<p>Antes de los ejercicios, permíteme recordarte lo que prometiste al final de la parte anterior.</p>\n<p>La programación es difícil, por eso utilizaré todos los medios posibles para facilitarla:</p>\n<ul>\n<li>Mantendré abierta la consola de desarrollo de mi navegador todo el tiempo.</li>\n<li>Progresaré con pequeños pasos.</li>\n<li>Escribiré muchas declaraciones de <em>console.log</em> para asegurarme de entender cómo se comporta el código y para ayudar a identificar problemas.</li>\n<li>Si mi código no funciona, no escribiré más código. En cambio, comenzaré a eliminar el código hasta que funcione o simplemente volveré a un estado en el que todo aún funcionaba.</li>\n<li>Cuando pida ayuda en el canal de Discord o Telegram del curso, o en cualquier otro lugar, formularé mis preguntas adecuadamente; consulta <a href=\"/es/part0/informacion_general#como-obtener-ayuda-en-discord-telegram\">aquí</a> cómo pedir ayuda.</li>\n</ul>\n</div>\n<div class=\"tasks\">\n<h3>Ejercicios 2.1.-2.5.</h3>\n<p>Los ejercicios se envían a través de GitHub y marcando los ejercicios como completados en el <a href=\"https://studies.cs.helsinki.fi/stats/courses/fullstackopen\">sistema de envío</a>.</p>\n<p>Puedes enviar todos los ejercicios en el mismo repositorio o usar varios repositorios diferentes. Si envías ejercicios de diferentes partes al mismo repositorio, nombra bien tus directorios.</p>\n<p>Los ejercicios se envían <strong>una parte a la vez</strong>. Cuando hayas enviado los ejercicios de una parte, ya no podrás enviar ejercicios faltantes para esa parte.</p>\n<p>Ten en cuenta que esta parte tiene más ejercicios que las anteriores, así que <i>no envíes</i> hasta que hayas hecho todos los ejercicios de esta parte que deseas enviar.</p>\n<h4>2.1: Información del curso paso 6</h4>\n<p>Terminemos el código para renderizar el contenido del curso de los ejercicios 1.1 - 1.5. Puedes comenzar con el código de las respuestas modelo. Las respuestas modelo para la parte 1 se pueden encontrar yendo al <a href=\"https://studies.cs.helsinki.fi/stats/courses/fullstackopen\">sistema de envío</a>, haciendo clic en <i>my submissions</i> en la parte superior, y en la fila correspondiente a la parte 1, bajo la columna <i>solutions</i>, haciendo clic en <i>show</i>. Para ver la solución al ejercicio de <i>información del curso</i>, haz clic en <em>index.js</em> bajo <i>kurssitiedot</i> (\"kurssitiedot\" significa \"información del curso\").</p>\n<p><strong>Ten en cuenta que si copias un proyecto de un lugar a otro, es posible que debas eliminar el directorio <i>node_modules</i> e instalar las dependencias nuevamente con el comando <em>npm install</em> antes de poder iniciar la aplicación.</strong></p>\n<p>En general, no se recomienda copiar todo el contenido de un proyecto y/o agregar el directorio <i>node_modules</i> al sistema de control de versiones.</p>\n<p>Cambiemos el componente <i>App</i> de la siguiente manera:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> course <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Half Stack application development'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">parts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Fundamentals of React'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">exercises</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Using props to pass data'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">exercises</span><span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'State of a component'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">exercises</span><span class=\"token operator\">:</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Course course<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>course<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Define un componente responsable de formatear un solo curso llamado <i>Course</i>.</p>\n<p>La estructura de componentes de la aplicación puede ser, por ejemplo, la siguiente:</p>\n<pre>\nApp\n  Course\n    Header\n    Content\n      Part\n      Part\n      ...\n</pre>\n<p>Por lo tanto, el componente <i>Course</i> contiene los componentes definidos en la parte anterior, que son responsables de renderizar el nombre del curso y sus partes.</p>\n<p>La página renderizada puede verse, por ejemplo, de la siguiente manera:</p>\n<picture><img src=\"/static/6e12df59c1c9e28c39ebdbe1b41ccf97/5a190/8e.png\" alt=\"captura de pantalla de la aplicación Half Stack\" srcset=\"/static/6e12df59c1c9e28c39ebdbe1b41ccf97/772e8/8e.png 200w,\n/static/6e12df59c1c9e28c39ebdbe1b41ccf97/e17e5/8e.png 400w,\n/static/6e12df59c1c9e28c39ebdbe1b41ccf97/5a190/8e.png 800w,\n/static/6e12df59c1c9e28c39ebdbe1b41ccf97/c1b63/8e.png 1200w,\n/static/6e12df59c1c9e28c39ebdbe1b41ccf97/a2792/8e.png 1462w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Aún no necesitas la suma de los ejercicios.</p>\n<p>La aplicación debe funcionar <i>independientemente del número de partes que tenga un curso</i>, así que asegúrate de que la aplicación funcione si agregas o quitas partes de un curso.</p>\n<p>¡Asegúrate de que la consola no muestre errores!</p>\n<h4>2.2: Información del curso paso 7</h4>\n<p>Muestra también la suma de los ejercicios del curso.</p>\n<picture><img src=\"/static/2d8aa950189db6cf2eeb794181429ae9/5a190/9e.png\" alt=\"nueva característica añadida de suma de ejercicios\" srcset=\"/static/2d8aa950189db6cf2eeb794181429ae9/772e8/9e.png 200w,\n/static/2d8aa950189db6cf2eeb794181429ae9/e17e5/9e.png 400w,\n/static/2d8aa950189db6cf2eeb794181429ae9/5a190/9e.png 800w,\n/static/2d8aa950189db6cf2eeb794181429ae9/c1b63/9e.png 1200w,\n/static/2d8aa950189db6cf2eeb794181429ae9/29007/9e.png 1600w,\n/static/2d8aa950189db6cf2eeb794181429ae9/eb1d2/9e.png 1622w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h4>2.3*: Información del curso paso 8</h4>\n<p>Si aún no lo has hecho, calcula la suma de los ejercicios con el método de array <a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\">reduce</a>.</p>\n<p><strong>Consejo profesional:</strong> cuando tu código se ve así:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> total <span class=\"token operator\">=</span> \n  parts<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">,</span> p</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> someMagicHere<span class=\"token punctuation\">)</span></code></pre></div>\n<p>y no funciona, vale la pena usar <i>console.log</i>, que requiere que la función de flecha se escriba en su forma más larga:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> total <span class=\"token operator\">=</span> parts<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">,</span> p</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'what is happening'</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> someMagicHere \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>¿No funciona? :</strong> Utiliza tu motor de búsqueda para buscar cómo se utiliza <em>reduce</em> en un <strong>Array de Objetos</strong>.</p>\n<h4>2.4: Información del curso paso 9</h4>\n<p>Ampliemos nuestra aplicación para permitir un <i>número arbitrario</i> de cursos:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> courses <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Half Stack application development'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">parts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Fundamentals of React'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">exercises</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Using props to pass data'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">exercises</span><span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'State of a component'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">exercises</span><span class=\"token operator\">:</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Redux'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">exercises</span><span class=\"token operator\">:</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> \n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Node.js'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">parts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Routing'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">exercises</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Middlewares'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">exercises</span><span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>La aplicación puede, por ejemplo, verse así:</p>\n<picture><img src=\"/static/8c1ce3363ec056cd15c5edacbeec3370/5a190/10e.png\" alt=\"característica adicional de número arbitrario de cursos\" srcset=\"/static/8c1ce3363ec056cd15c5edacbeec3370/772e8/10e.png 200w,\n/static/8c1ce3363ec056cd15c5edacbeec3370/e17e5/10e.png 400w,\n/static/8c1ce3363ec056cd15c5edacbeec3370/5a190/10e.png 800w,\n/static/8c1ce3363ec056cd15c5edacbeec3370/c1b63/10e.png 1200w,\n/static/8c1ce3363ec056cd15c5edacbeec3370/29007/10e.png 1600w,\n/static/8c1ce3363ec056cd15c5edacbeec3370/799f3/10e.png 1642w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h4>2.5: Módulo separado paso 10</h4>\n<p>Declara el componente <i>Course</i> como un módulo separado, que se importa en el componente <i>App</i>. Puedes incluir todos los subcomponentes del curso en el mismo módulo.</p>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/8869c2e065a6ae187c633a378e6fa6be/part-2.svg"},"part":2,"letter":"a","lang":"es"}}},"pageContext":{"part":2,"letter":"a","lang":"es"}},"staticQueryHashes":["3128451518"]}