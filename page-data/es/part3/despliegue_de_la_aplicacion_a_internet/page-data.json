{"componentChunkName":"component---src-templates-content-template-js","path":"/es/part3/despliegue_de_la_aplicacion_a_internet","result":{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<p>A continuación, conectemos el frontend que creamos en la <a href=\"/es/part2\">parte 2</a> a nuestro propio backend.</p>\n<p>En la parte anterior, el frontend podía pedir la lista de notas del servidor json que teníamos como backend, desde la dirección <a href=\"http://localhost:3001/notes\">http://localhost:3001/notes</a>.\nNuestro backend tiene ahora una estructura de URL ligeramente diferente, ya que las notas se pueden encontrar en <a href=\"http://localhost:3001/api/notes\">http://localhost:3001/api/notes</a>. Cambiemos el atributo <em>baseUrl</em> en <i>src/services/notes.js</i> así:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> baseUrl <span class=\"token operator\">=</span> <span class=\"token string\">'http://localhost:3001/api/notes'</span></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getAll</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>baseUrl<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span> getAll<span class=\"token punctuation\">,</span> create<span class=\"token punctuation\">,</span> update <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ahora la solicitud GET del frontend a <a href=\"http://localhost:3001/api/notes\">http://localhost:3001/api/notes</a> no funciona por alguna razón:</p>\n<picture><img src=\"/static/da88e17cb078c89a6e7ba30d61fab0e6/5a190/3ae.png\" alt=\"solicitud get mostrando error en herramientas de desarrollo\" srcset=\"/static/da88e17cb078c89a6e7ba30d61fab0e6/772e8/3ae.png 200w,\n/static/da88e17cb078c89a6e7ba30d61fab0e6/e17e5/3ae.png 400w,\n/static/da88e17cb078c89a6e7ba30d61fab0e6/5a190/3ae.png 800w,\n/static/da88e17cb078c89a6e7ba30d61fab0e6/c1b63/3ae.png 1200w,\n/static/da88e17cb078c89a6e7ba30d61fab0e6/29007/3ae.png 1600w,\n/static/da88e17cb078c89a6e7ba30d61fab0e6/6e29b/3ae.png 1610w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>¿Que está pasando aquí? Podemos acceder al backend desde un navegador y desde postman sin ningún problema.</p>\n<h3>Política de mismo origen y CORS</h3>\n<p>El problema radica en algo llamado <em>same origin policy (política de mismo origen)</em>. El origen de una URL es definido por la combinación de protocolo (también conocido como esquema), nombre de host y puerto.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">http://example.com:80/index.html\n  \nprotocol: http\nhost: example.com\nport: 80</code></pre></div>\n<p>Cuando visitas un sitio web (por ejemplo, <a href=\"http://catwebsites.com\">http://catwebsites.com</a>), el navegador emite una solicitud al servidor en el que está alojado el sitio web (catwebsites.com). La respuesta enviada por el servidor es un archivo HTML que puede contener una o más referencias a recursos externos alojados ya sea en el mismo servidor que catwebsites.com o en un sitio web diferente. Cuando el navegador ve referencia(s) a una URL en el HTML fuente, emite una solicitud. Si la solicitud se realiza utilizando la URL desde la cual se obtuvo el HTML fuente, entonces el navegador procesa la respuesta sin problemas. Sin embargo, si el recurso se obtiene utilizando una URL que no comparte el mismo origen (esquema, host, puerto) que el HTML fuente, el navegador tendrá que verificar el encabezado de respuesta <em>Access-Control-Allow-Origin</em>. Si contiene <em>*</em> o la URL del HTML fuente, el navegador procesará la respuesta; de lo contrario, el navegador se negará a procesarla y generará un error.</p>\n<p>La <strong>política de mismo origen</strong> es un mecanismo de seguridad implementado por los navegadores para prevenir el secuestro de sesiones, entre otras vulnerabilidades de seguridad.</p>\n<p>Para habilitar solicitudes cruzadas legítimas (solicitudes a URLs que no comparten el mismo origen), W3C ideó un mecanismo llamado <strong>CORS</strong> (Cross-Origin Resource Sharing). Según <a href=\"https://es.wikipedia.org/wiki/Intercambio_de_recursos_de_origen_cruzado\">Wikipedia</a>:</p>\n<blockquote>\n<p><i>El intercambio de recursos de origen cruzado (CORS) es un mecanismo que permite solicitar recursos restringidos (por ejemplo, tipografías) en una página web desde otro dominio fuera del dominio desde el que se sirvió el primer recurso. Una página web puede incrustar libremente imágenes, hojas de estilo, scripts, iframes y videos de origen cruzado. Ciertas solicitudes \"entre dominios\", en particular las solicitudes Ajax, están prohibidas de forma predeterminada por la política de seguridad del mismo origen.</i></p>\n</blockquote>\n<p>En nuestro contexto, el problema es que, por defecto, el código JavaScript de una aplicación que se ejecuta en un navegador solo puede comunicarse con un servidor en el mismo <a href=\"https://developer.mozilla.org/es/docs/Web/Security/Same-origin_policy\">origen</a>.\nDebido a que nuestro servidor está en el puerto localhost 3001 y nuestra interfaz en el puerto localhost 3000, no tienen el mismo origen.</p>\n<p>Ten en cuenta que la <a href=\"https://developer.mozilla.org/es/docs/Web/Security/Same-origin_policy\">política de mismo origen</a> y CORS no son específicos de React o Node. De hecho, son principios universales del funcionamiento de las aplicaciones web.</p>\n<p>Podemos permitir solicitudes de otros <i>orígenes</i> utilizando el middleware <a href=\"https://github.com/expressjs/cors\">cors</a> de Node.</p>\n<p>En tu repositorio backend, Instala <i>cors</i> con el comando</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> cors</code></pre></div>\n<p>usemos el middleware y así permitimos solicitudes de todos los orígenes:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> cors <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cors'</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>¡Y el frontend funciona! Sin embargo, la funcionalidad para cambiar la importancia de las notas aún no se ha implementado en el backend.</p>\n<p>Puedes leer más sobre CORS en la <a href=\"https://developer.mozilla.org/es/docs/Web/HTTP/CORS\">página de Mozilla</a>.</p>\n<p>La configuración de nuestra aplicación se ve así ahora:</p>\n<picture><img src=\"/static/2aa09f5e7969cf4ec229aceb70abfa26/664c8/100.png\" alt=\"diagrama de la aplicación React y el navegador\" srcset=\"/static/2aa09f5e7969cf4ec229aceb70abfa26/772e8/100.png 200w,\n/static/2aa09f5e7969cf4ec229aceb70abfa26/e17e5/100.png 400w,\n/static/2aa09f5e7969cf4ec229aceb70abfa26/664c8/100.png 524w\" sizes=\"(max-width: 524px) 100vw, 524px\"></picture>\n<p>La aplicación React que se ejecuta en el navegador ahora obtiene los datos del servidor node/express que se ejecuta en localhost:3001.</p>\n<h3>Aplicación a Internet</h3>\n<p>Ahora que todo el stack está listo, movamos nuestra aplicación a Internet.</p>\n<p>Hay un número cada vez mayor de servicios que se pueden utilizar para alojar una aplicación en Internet. Los servicios orientados al desarrollador, como PaaS (es decir, Plataforma como Servicio), se encargan de instalar el entorno de ejecución (por ejemplo, Node.js) y también pueden proporcionar varios servicios, como bases de datos.</p>\n<p>Durante una década, <a href=\"http://heroku.com\">Heroku</a> dominó la escena de PaaS. Desafortunadamente, el nivel gratuito de Heroku terminó el 27 de noviembre de 2022. Esto es muy desafortunado para muchos desarrolladores, especialmente estudiantes. Heroku sigue siendo una opción viable si estás dispuesto a gastar algo de dinero. También tienen <a href=\"https://www.heroku.com/students\">un programa para estudiantes</a> que proporciona algunos créditos gratuitos.</p>\n<p>Ahora estamos presentando dos servicios <a href=\"https://fly.io/\">Fly.io</a> y <a href=\"https://render.com/\">Render</a> que ambos tienen un plan gratuito (limitado). Fly.io es nuestro servicio de alojamiento \"oficial\", ya que se puede utilizar con seguridad también en las partes 11 y 13 del curso. Render también funcionará bien al menos para las otras partes de este curso.</p>\n<p>Ten en cuenta que a pesar de utilizar solo el nivel gratuito, Fly.io <i>puede</i> requerir que ingreses los detalles de tu tarjeta de crédito. En este momento, Render se puede usar sin una tarjeta de crédito.</p>\n<p>Render podría ser un poco más fácil de usar, ya que no requiere que se instale ningún software en tu máquina.</p>\n<p>También hay algunas otras opciones de alojamiento gratuitas que funcionan bien para este curso, al menos para todas las partes excepto la parte 11 (CI/CD) que podría tener un ejercicio complicado para otras plataformas.</p>\n<p>Algunos participantes del curso también han utilizado los siguientes servicios:</p>\n<ul>\n<li><a href=\"https://www.cyclic.sh/\">Cyclic</a></li>\n<li><a href=\"https://replit.com\">Replit</a></li>\n<li><a href=\"https://codesandbox.io\">CodeSandBox</a></li>\n</ul>\n<p>Si conoces otros servicios buenos y fáciles de usar para alojar NodeJS, ¡háznoslo saber!</p>\n<p>Para Fly.io y Render, necesitamos cambiar la definición del puerto que nuestra aplicación utiliza al final del archivo <i>index.js</i> en el backend de la siguiente manera:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">3001</span></span>app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Server running on port </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">PORT</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Ahora estamos utilizando el puerto definido en la <a href=\"https://es.wikipedia.org/wiki/Variable_de_entorno\">variable de entorno</a> <em>PORT</em> o el puerto 3001 si la variable de entorno <em>PORT</em> no está definida. Fly.io y Render configuran el puerto de la aplicación en función de esa variable de entorno.</p>\n<h4>Fly.io</h4>\n<p><i>Ten en cuenta que es posible que necesites proporcionar el número de tu tarjeta de crédito a Fly.io incluso si estás utilizando solo el nivel gratuito.</i> De hecho, ha habido informes contradictorios al respecto, se sabe con certeza que algunos de los estudiantes en este curso están utilizando Fly.io sin ingresar la información de su tarjeta de crédito. En este momento, <a href=\"https://render.com/\">Render</a> se puede utilizar sin una tarjeta de crédito.</p>\n<p>Por defecto, todos obtienen dos máquinas virtuales gratuitas que se pueden utilizar para ejecutar dos aplicaciones al mismo tiempo.</p>\n<p>Si decides utilizar <a href=\"https://fly.io/\">Fly.io</a>, comienza instalando su ejecutable flyctl siguiendo <a href=\"https://fly.io/docs/hands-on/install-flyctl/\">esta guía</a>. Después de eso, debes <a href=\"https://fly.io/docs/hands-on/sign-up/\">crear una cuenta en Fly.io</a>.</p>\n<p>Comienza <a href=\"https://fly.io/docs/hands-on/sign-in/\">autenticándote</a> a través de la línea de comandos con el siguiente comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">fly auth login</code></pre></div>\n<p>Ten en cuenta que si el comando <em>fly</em> no funciona en tu máquina, puedes probar la versión más larga <em>flyctl</em>. Por ejemplo, en MacOS, ambas formas del comando funcionan.</p>\n<p><i>Si no logras que flyctl funcione en tu máquina, puedes probar Render (ver la próxima sección), no requiere que se instale nada en tu máquina.</i></p>\n<p>La inicialización de una aplicación se realiza ejecutando el siguiente comando en el directorio raíz de la aplicación:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">fly launch</code></pre></div>\n<p>Dale un nombre a la aplicación o permite que Fly.io genere uno automáticamente. Selecciona una región donde se ejecutará la aplicación. No crees una base de datos PostgreSQL para la aplicación y no crees una base de datos Upstash Redis, ya que no son necesarias.</p>\n<p>La última pregunta es \"Would you like to deploy now? (¿Quieres desplegar ahora?)\". Deberíamos responder \"no\" ya que aún no estamos listos.</p>\n<p>Fly.io crea un archivo <i>fly.toml</i> en la raíz de tu aplicación donde podemos configurarlo. Para poner en marcha la aplicación, <i>podríamos</i> necesitar hacer una pequeña adición a la configuración:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>build<span class=\"token punctuation\">]</span>\n\n<span class=\"token punctuation\">[</span>env<span class=\"token punctuation\">]</span>\n  PORT <span class=\"token operator\">=</span> <span class=\"token string\">\"3000\"</span> <span class=\"token comment\"># add this</span>\n\n<span class=\"token punctuation\">[</span>http_service<span class=\"token punctuation\">]</span>\n  internal_port <span class=\"token operator\">=</span> <span class=\"token number\">3000</span> <span class=\"token comment\"># ensure that this is same as PORT</span>\n  force_https <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n  auto_stop_machines <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n  auto_start_machines <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n  min_machines_running <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  processes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>Hemos definido ahora en la sección [env] que la variable de entorno PORT obtendrá el puerto correcto (definido en la sección [http_service]) donde la aplicación debe crear el servidor. Ten en cuenta que la definición podría estar allí, pero a veces ha estado ausente.</p>\n<p>Ahora estamos listos para implementar la aplicación en los servidores de Fly.io. Esto se hace con el siguiente comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">fly deploy</code></pre></div>\n<p>Si todo va bien, la aplicación debería estar ahora activa y funcionando. Puedes abrirla en el navegador con el siguiente comando</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">fly apps <span class=\"token function\">open</span></code></pre></div>\n<p>Un comando especialmente importante es <em>fly logs</em>. Este comando se puede utilizar para ver los registros del servidor. Es mejor mantener siempre visibles los registros.</p>\n<p><strong>Nota:</strong> Si estás utilizando Fly.io, Fly puede crear 2 máquinas para tu aplicación. Si esto sucede, el estado de los datos en tu aplicación será inconsistente entre las solicitudes. Es decir, tendrías dos máquinas, cada una con su propia variable de notas. Podrías realizar un POST en una máquina y luego tu siguiente GET podría ir a otra máquina. Puedes verificar el número de máquinas usando el comando \"$ fly scale show\". Si el recuento es mayor que 1, puedes forzar que sea 1 con el comando \"$ fly scale count 1\". El recuento de máquinas también se puede verificar en el panel de control.</p>\n<p><strong>Nota:</strong> En algunos casos (la causa aún se desconoce), ejecutar comandos de Fly.io, especialmente en Windows WSL (Subsistema de Windows para Linux), ha causado problemas. Si el siguiente comando se cuelga</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">flyctl <span class=\"token function\">ping</span> <span class=\"token parameter variable\">-o</span> personal</code></pre></div>\n<p>tu computadora no puede conectarse por alguna razón a Fly.io. Si esto te sucede, <a href=\"https://github.com/fullstack-hy2020/misc/blob/master/fly_io_problem.md\">este enlace</a> describe una posible manera de proceder.</p>\n<p>Si la salida del siguiente comando se ve así:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ flyctl <span class=\"token function\">ping</span> <span class=\"token parameter variable\">-o</span> personal\n<span class=\"token number\">35</span> bytes from fdaa:0:8a3d::3 <span class=\"token punctuation\">(</span>gateway<span class=\"token punctuation\">)</span>, <span class=\"token assign-left variable\">seq</span><span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span><span class=\"token number\">65</span>.1ms\n<span class=\"token number\">35</span> bytes from fdaa:0:8a3d::3 <span class=\"token punctuation\">(</span>gateway<span class=\"token punctuation\">)</span>, <span class=\"token assign-left variable\">seq</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span><span class=\"token number\">28</span>.5ms\n<span class=\"token number\">35</span> bytes from fdaa:0:8a3d::3 <span class=\"token punctuation\">(</span>gateway<span class=\"token punctuation\">)</span>, <span class=\"token assign-left variable\">seq</span><span class=\"token operator\">=</span><span class=\"token number\">2</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span><span class=\"token number\">29</span>.3ms\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n<p>¡entonces no hay problemas de conexión!</p>\n<p>Cada vez que realices cambios en la aplicación, puedes llevar la nueva versión a producción con el siguiente comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">fly deploy</code></pre></div>\n<h4>Render</h4>\n<p>Lo siguiente asume que ya has iniciado sesión <a href=\"https://dashboard.render.com/\">aquí</a> con una cuenta de GitHub.</p>\n<p>Después de iniciar sesión, creemos un nuevo \"web service\":</p>\n<picture><img src=\"/static/918351e5ad479c327ac578c0743a0811/5a190/r1.png\" alt=\"Imagen que muestra la opción de crear un nuevo servicio web\" srcset=\"/static/918351e5ad479c327ac578c0743a0811/772e8/r1.png 200w,\n/static/918351e5ad479c327ac578c0743a0811/e17e5/r1.png 400w,\n/static/918351e5ad479c327ac578c0743a0811/5a190/r1.png 800w,\n/static/918351e5ad479c327ac578c0743a0811/c1b63/r1.png 1200w,\n/static/918351e5ad479c327ac578c0743a0811/29007/r1.png 1600w,\n/static/918351e5ad479c327ac578c0743a0811/5ab15/r1.png 2446w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Luego, el repositorio de la aplicación se conecta a Render:</p>\n<picture><img src=\"/static/75040aae9bcb08b7aa53fd201ed900a9/5a190/r2.png\" alt=\"Imagen que muestra el repositorio de la aplicación en Render\" srcset=\"/static/75040aae9bcb08b7aa53fd201ed900a9/772e8/r2.png 200w,\n/static/75040aae9bcb08b7aa53fd201ed900a9/e17e5/r2.png 400w,\n/static/75040aae9bcb08b7aa53fd201ed900a9/5a190/r2.png 800w,\n/static/75040aae9bcb08b7aa53fd201ed900a9/c1b63/r2.png 1200w,\n/static/75040aae9bcb08b7aa53fd201ed900a9/29007/r2.png 1600w,\n/static/75040aae9bcb08b7aa53fd201ed900a9/966c1/r2.png 1694w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>La conexión parece requerir que el repositorio de la aplicación sea público.</p>\n<p>A continuación, definiremos las configuraciones básicas. Si la aplicación <i>no</i> está en la raíz del repositorio, se debe proporcionar un valor adecuado para el <i>Root directory</i>:</p>\n<picture><img src=\"/static/8411e07f2b7ee2665f61341b7253e49f/5a190/r3.png\" alt=\"Imagen que muestra el campo de directorio raíz como opcional\" srcset=\"/static/8411e07f2b7ee2665f61341b7253e49f/772e8/r3.png 200w,\n/static/8411e07f2b7ee2665f61341b7253e49f/e17e5/r3.png 400w,\n/static/8411e07f2b7ee2665f61341b7253e49f/5a190/r3.png 800w,\n/static/8411e07f2b7ee2665f61341b7253e49f/c1b63/r3.png 1200w,\n/static/8411e07f2b7ee2665f61341b7253e49f/29007/r3.png 1600w,\n/static/8411e07f2b7ee2665f61341b7253e49f/97a96/r3.png 2400w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Después de esto, la aplicación se inicia en Render. El panel nos muestra el estado de la aplicación y la URL donde se está ejecutando:</p>\n<picture><img src=\"/static/4a478e6ef9229324ff606f2ada7b0b46/5a190/r4.png\" alt=\"La esquina superior izquierda de la imagen muestra el estado de la aplicación y su URL\" srcset=\"/static/4a478e6ef9229324ff606f2ada7b0b46/772e8/r4.png 200w,\n/static/4a478e6ef9229324ff606f2ada7b0b46/e17e5/r4.png 400w,\n/static/4a478e6ef9229324ff606f2ada7b0b46/5a190/r4.png 800w,\n/static/4a478e6ef9229324ff606f2ada7b0b46/c1b63/r4.png 1200w,\n/static/4a478e6ef9229324ff606f2ada7b0b46/29007/r4.png 1600w,\n/static/4a478e6ef9229324ff606f2ada7b0b46/60ab9/r4.png 2450w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Según la <a href=\"https://render.com/docs/deploys\">documentación</a>, cada commit en GitHub debería volver a desplegar la aplicación. Por alguna razón, esto no siempre funciona.</p>\n<p>Afortunadamente, también es posible volver a desplegar manualmente la aplicación:</p>\n<picture><img src=\"/static/b87d1b6ab7339294ad1f00453155e733/5a190/r5.png\" alt=\"Menú con la opción para desplegar el último commit resaltado\" srcset=\"/static/b87d1b6ab7339294ad1f00453155e733/772e8/r5.png 200w,\n/static/b87d1b6ab7339294ad1f00453155e733/e17e5/r5.png 400w,\n/static/b87d1b6ab7339294ad1f00453155e733/5a190/r5.png 800w,\n/static/b87d1b6ab7339294ad1f00453155e733/c1b63/r5.png 1200w,\n/static/b87d1b6ab7339294ad1f00453155e733/29007/r5.png 1600w,\n/static/b87d1b6ab7339294ad1f00453155e733/79538/r5.png 2530w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Además, los registros de la aplicación se pueden ver en el panel:</p>\n<picture><img src=\"/static/798d2488fb450327abf2b6729faaaeec/5a190/r7.png\" alt=\"Imagen con la pestaña de registros resaltada en la esquina izquierda. En el lado derecho, los registros de la aplicación\" srcset=\"/static/798d2488fb450327abf2b6729faaaeec/772e8/r7.png 200w,\n/static/798d2488fb450327abf2b6729faaaeec/e17e5/r7.png 400w,\n/static/798d2488fb450327abf2b6729faaaeec/5a190/r7.png 800w,\n/static/798d2488fb450327abf2b6729faaaeec/c1b63/r7.png 1200w,\n/static/798d2488fb450327abf2b6729faaaeec/29007/r7.png 1600w,\n/static/798d2488fb450327abf2b6729faaaeec/b5c8e/r7.png 2194w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Observamos ahora desde los registros que la aplicación se ha iniciado en el puerto 10000. El código de la aplicación obtiene el puerto correcto a través de la variable de entorno PORT, por lo que es esencial que el archivo <i>index.js</i> se haya actualizado en el backend de la siguiente manera:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">3001</span></span>app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Server running on port </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">PORT</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Frontend production build</h3>\n<p>Hasta ahora hemos estado ejecutando el código de React en <i>modo de desarrollo</i>. En el modo de desarrollo, la aplicación está configurada para dar mensajes de error claros, mostrar inmediatamente los cambios de código en el navegador, etc.</p>\n<p>Cuando se despliega la aplicación, debemos crear un <a href=\"https://es.vitejs.dev/guide/build\">production build</a> (compilación de producción) o una versión de la aplicación que esté optimizada para producción.</p>\n<p>Una compilación de producción para aplicaciones creadas con Vite puede crearse con el comando <a href=\"https://es.vitejs.dev/guide/build\">npm run build</a>.</p>\n<p>Ejecutemos este comando desde la <i>raíz del proyecto frontend</i> que desarrollamos en la <a href=\"/es/part2\">Parte 2</a>.</p>\n<p>Esto crea un directorio llamado <i>dist</i> (que contiene el único archivo HTML de nuestra aplicación, <i>index.html</i>) y el directorio <i>assets</i>. Se generará una versión <a href=\"https://en.wikipedia.org/wiki/Minification_(programming)\">Minified</a>(reducida) del código JavaScript de nuestra aplicación en el directorio <i>dist</i>. Aunque el código de la aplicación está en varios archivos, todo el JavaScript se reducirá en un solo archivo. En realidad, todo el código de todas las dependencias de la aplicación también se reducirá en este único archivo.</p>\n<p>El código reducido no es muy legible. El comienzo del código se ve así:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">!</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">function</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> n<span class=\"token punctuation\">,</span>f<span class=\"token punctuation\">,</span>i<span class=\"token operator\">=</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>l<span class=\"token operator\">=</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>s<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>c<span class=\"token operator\">&lt;</span>i<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>f<span class=\"token operator\">=</span>i<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>o<span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;&amp;</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>o<span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>n <span class=\"token keyword\">in</span> l<span class=\"token punctuation\">)</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>l<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">&amp;&amp;</span><span class=\"token function\">p</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> u<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span>a<span class=\"token operator\">||</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">function</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> e<span class=\"token punctuation\">,</span>r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>r<span class=\"token operator\">&lt;</span>u<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span>u<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>n<span class=\"token operator\">=</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>t<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span> l<span class=\"token operator\">=</span>t<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token number\">0</span><span class=\"token operator\">!==</span>o<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">=</span><span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>n<span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>e<span class=\"token operator\">=</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>s<span class=\"token operator\">=</span>t<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">return</span> e<span class=\"token punctuation\">}</span><span class=\"token keyword\">var</span> n<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>o<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>u<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">return</span> n<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">;</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span>n<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">i</span><span class=\"token operator\">:</span>r<span class=\"token punctuation\">,</span><span class=\"token literal-property property\">l</span><span class=\"token operator\">:</span><span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">exports</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> e<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">,</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">.</span>l<span class=\"token operator\">=</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">}</span>f<span class=\"token punctuation\">.</span>m<span class=\"token operator\">=</span>e<span class=\"token punctuation\">,</span>f<span class=\"token punctuation\">.</span>c<span class=\"token operator\">=</span>n<span class=\"token punctuation\">,</span>f<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">d</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">,</span>t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>f<span class=\"token punctuation\">.</span><span class=\"token function\">o</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span><span class=\"token operator\">||</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">get</span><span class=\"token operator\">:</span>t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>f<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">r</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"undefined\"</span><span class=\"token operator\">!==</span><span class=\"token keyword\">typeof</span> Symbol<span class=\"token operator\">&amp;&amp;</span>Symbol<span class=\"token punctuation\">.</span>toStringTag<span class=\"token operator\">&amp;&amp;</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>Symbol<span class=\"token punctuation\">.</span>toStringTag<span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token string\">\"Module\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Sirviendo archivos estáticos desde el backend</h3>\n<p>Una opción para implementar el frontend es copiar la compilación de producción (el directorio <i>dist</i>) a la raíz del repositorio del backend y configurar el backend para que muestre la <i>página principal</i> del frontend (el archivo <i>dist/index.html</i>) como su página principal.</p>\n<p>Comenzamos copiando la compilación de producción del frontend a la raíz del backend. Con una computadora Mac o Linux, la copia se puede hacer desde el directorio frontend con el comando</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> <span class=\"token parameter variable\">-r</span> dist <span class=\"token punctuation\">..</span>/backend</code></pre></div>\n<p>Si estás usando una computadora con Windows, puedes usar el comando <a href=\"https://www.windows-commandline.com/windows-copy-command-syntax-examples/\">copy</a> o <a href=\"https://www.windows-commandline.com/xcopy-command-syntax-examples/\">xcopy</a> en su lugar. De lo contrario, simplemente copia y pega.</p>\n<p>El directorio de backend ahora debería verse así:</p>\n<picture><img src=\"/static/6148bf347bb9674c782d5dfc9bdd643b/5a190/27v.png\" alt=\"comando ls de bash mostrando directorio dist\" srcset=\"/static/6148bf347bb9674c782d5dfc9bdd643b/772e8/27v.png 200w,\n/static/6148bf347bb9674c782d5dfc9bdd643b/e17e5/27v.png 400w,\n/static/6148bf347bb9674c782d5dfc9bdd643b/5a190/27v.png 800w,\n/static/6148bf347bb9674c782d5dfc9bdd643b/f680b/27v.png 1108w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Para hacer que express muestre <i>contenido estático</i>, la página <i>index.html</i>  y el JavaScript, etc., necesitamos un middleware integrado de express llamado <a href=\"http://expressjs.com/en/starter/static-files.html\">static</a>.</p>\n<p>Cuando agregamos lo siguiente en medio de las declaraciones de middlewares</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">static</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>siempre que express recibe una solicitud HTTP GET, primero verificará si el directorio <i>dist</i> contiene un archivo correspondiente a la dirección de la solicitud. Si se encuentra un archivo correcto, express lo devolverá.</p>\n<p>Ahora las solicitudes HTTP GET a la dirección <i>www.serversaddress.com/index.html</i> o <i>www.serversaddress.com</i> mostrarán el frontend de React. Las solicitudes GET a la dirección <i>www.serversaddress.com/api/notes</i> serán manejadas por el código del backend.</p>\n<p>Debido a nuestra situación, tanto el frontend como el backend están en la misma dirección, podemos declarar <em>baseUrl</em> como una URL <a href=\"https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2\">relativa</a>. Esto significa que podemos omitir la parte que declara el servidor.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> baseUrl <span class=\"token operator\">=</span> <span class=\"token string\">'/api/notes'</span></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getAll</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>baseUrl<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ...</span></code></pre></div>\n<p>Después del cambio, tenemos que crear una nueva compilación de producción y copiarla en la raíz del repositorio de backend.</p>\n<p>La aplicación ahora se puede utilizar desde la dirección de <i>backend</i> <a href=\"http://localhost:3001\">http://localhost:3001</a>:</p>\n<picture><img src=\"/static/00b60846d754ead099038271e2e54ecc/5a190/28new.png\" alt=\"Aplicación Notes en localhost:3001\" srcset=\"/static/00b60846d754ead099038271e2e54ecc/772e8/28new.png 200w,\n/static/00b60846d754ead099038271e2e54ecc/e17e5/28new.png 400w,\n/static/00b60846d754ead099038271e2e54ecc/5a190/28new.png 800w,\n/static/00b60846d754ead099038271e2e54ecc/c1b63/28new.png 1200w,\n/static/00b60846d754ead099038271e2e54ecc/29007/28new.png 1600w,\n/static/00b60846d754ead099038271e2e54ecc/ca3c3/28new.png 1850w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Nuestra aplicación ahora funciona exactamente como la aplicación de ejemplo de <a href=\"/es/part0/fundamentos_de_las_aplicaciones_web#aplicacion-de-una-sola-pagina\">una sola pagina</a> que estudiamos en la parte 0.</p>\n<p>Cuando usamos un navegador para ir a la dirección <a href=\"http://localhost:3001\">http://localhost:3001</a>, el servidor devuelve el archivo <i>index.html</i> del directorio <i>dist</i>. El contenido del archivo es el siguiente:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">doctype</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/svg+xml<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/vite.svg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Vite + React<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/assets/index-5f6faa37.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/assets/index-198af077.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    \n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>El archivo contiene instrucciones para obtener una hoja de estilo CSS que define los estilos de la aplicación y una etiqueta <i>script</i> que indica al navegador que obtenga el código JavaScript de la aplicación, es decir, la aplicación React.</p>\n<p>El código de React obtiene notas de la dirección del servidor <a href=\"http://localhost:3001/api/notes\">http://localhost:3001/api/notes</a> y las muestra en la pantalla. Las comunicaciones entre el servidor y el navegador se pueden ver en la pestaña <i>Network</i> de la consola del desarrollador:</p>\n<picture><img src=\"/static/7e90543c1d9697b1058225a877364cb9/5a190/29new.png\" alt=\"pestaña Network de aplicación de notas en el backend\" srcset=\"/static/7e90543c1d9697b1058225a877364cb9/772e8/29new.png 200w,\n/static/7e90543c1d9697b1058225a877364cb9/e17e5/29new.png 400w,\n/static/7e90543c1d9697b1058225a877364cb9/5a190/29new.png 800w,\n/static/7e90543c1d9697b1058225a877364cb9/c1b63/29new.png 1200w,\n/static/7e90543c1d9697b1058225a877364cb9/29007/29new.png 1600w,\n/static/7e90543c1d9697b1058225a877364cb9/9e7e4/29new.png 2056w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>La configuración que está lista para un despliegue en producción se ve así:</p>\n<picture><img src=\"/static/6f33425b60b49278d57df7e62f81a32c/db910/101.png\" alt=\"diagrama de la aplicación React lista para despliegue\" srcset=\"/static/6f33425b60b49278d57df7e62f81a32c/772e8/101.png 200w,\n/static/6f33425b60b49278d57df7e62f81a32c/db910/101.png 396w\" sizes=\"(max-width: 396px) 100vw, 396px\"></picture>\n<p>A diferencia de cuando se ejecuta la aplicación en un entorno de desarrollo, todo está ahora en el mismo backend de node/express que se ejecuta en localhost:3001. Cuando el navegador accede a la página, se renderiza el archivo <i>index.html</i>. Esto hace que el navegador obtenga la versión de producción de la aplicación React. Una vez que comienza a ejecutarse, obtiene los datos en formato JSON desde la dirección localhost:3001/api/notes.</p>\n<h3>La aplicación completa en Internet</h3>\n<p>Después de asegurarte de que la versión de producción de la aplicación funcione localmente, haz un commit de la compilación de producción del frontend en el repositorio de backend y envía el código a GitHub nuevamente.</p>\n<p><strong>NB:</strong> Si usas Render, asegúrate de que el directorio <i>dist</i> no esté ignorado por Git en el backend.</p>\n<p>Si estás utilizando Render, un envío a GitHub <i>podría</i> ser suficiente. Si el despliegue automático no funciona, selecciona \"manual deploy (despliegue manual)\" desde el panel de Render.</p>\n<p>En el caso de Fly.io, el nuevo despliegue se realiza con el comando</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">fly deploy</code></pre></div>\n<p>La aplicación funciona perfectamente, excepto que aún no hemos agregado la funcionalidad para cambiar la importancia de una nota en el backend.</p>\n<p><i><strong>NOTA:</strong> Si estás utilizando Fly.io, podría haber un archivo .dockerignore que especifique la exclusión del directorio \"./build\" durante el despliegue. Para asegurarte de que se despliegue, considera cambiar el nombre del directorio ./build a ./static_build o a un nombre equivalente.</i></p>\n<picture><img src=\"/static/7003b3eacf4ce56213d8be4bea2df167/5a190/30new.png\" alt=\"captura de pantalla de la aplicación de notas\" srcset=\"/static/7003b3eacf4ce56213d8be4bea2df167/772e8/30new.png 200w,\n/static/7003b3eacf4ce56213d8be4bea2df167/e17e5/30new.png 400w,\n/static/7003b3eacf4ce56213d8be4bea2df167/5a190/30new.png 800w,\n/static/7003b3eacf4ce56213d8be4bea2df167/c1b63/30new.png 1200w,\n/static/7003b3eacf4ce56213d8be4bea2df167/29007/30new.png 1600w,\n/static/7003b3eacf4ce56213d8be4bea2df167/8454b/30new.png 1798w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p><i><strong>NOTA:</strong> el cambio de la importancia TODAVÍA NO funciona ya que el backend aún no lo tiene implementado.</i></p>\n<p>Nuestra aplicación guarda las notas en una variable. Si la aplicación se bloquea o se reinicia, todos los datos desaparecerán.</p>\n<p>La aplicación necesita una base de datos. Antes de introducir una, repasemos algunas cosas.</p>\n<p>La configuración ahora se ve así:</p>\n<picture><img src=\"/static/f66a6db377fe19444ecd3bea78c49d4b/5a190/102.png\" alt=\"diagrama de la aplicación React en fly.io\" srcset=\"/static/f66a6db377fe19444ecd3bea78c49d4b/772e8/102.png 200w,\n/static/f66a6db377fe19444ecd3bea78c49d4b/e17e5/102.png 400w,\n/static/f66a6db377fe19444ecd3bea78c49d4b/5a190/102.png 800w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>El backend de node/express ahora reside en el servidor de Fly.io/Render. Cuando se accede a la dirección raíz, el navegador carga y ejecuta la aplicación React que obtiene los datos JSON del servidor de Fly.io/Render.</p>\n<h3>Optimizando el despliegue del frontend</h3>\n<p>Para crear una nueva compilación de producción del frontend sin trabajo manual adicional, agreguemos algunos scripts npm al <i>package.json</i> del repositorio de backend.</p>\n<h4>Fly.io script</h4>\n<p>Los scripts se ven así:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token property\">\"build:ui\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rm -rf dist &amp;&amp; cd ../notes-frontend/ &amp;&amp; npm run build &amp;&amp; cp -r dist ../notes-backend\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fly deploy\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"deploy:full\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build:ui &amp;&amp; npm run deploy\"</span><span class=\"token punctuation\">,</span>    \n    <span class=\"token property\">\"logs:prod\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fly logs\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h5>Para usuarios de Windows</h5>\n<p>Ten en cuenta que los comandos de shell estándar en <code class=\"language-text\">build:ui</code> no funcionan de forma nativa en Windows. En Powershell de Windows se puede escribir el script como</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"build:ui\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@powershell Remove-Item -Recurse -Force dist &amp;&amp; cd ../frontend &amp;&amp; npm run build &amp;&amp; @powershell Copy-Item dist -Recurse ../backend\"</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Si el script no funciona en Windows, confirma que estás utilizando Powershell y no el Command Prompt. Si has instalado Git Bash u otro terminal similar a Linux, es posible que puedas ejecutar comandos similares a Linux también en Windows.</p>\n<p>El script <em>npm run build:ui</em> construye el frontend y copia la versión de producción bajo el repositorio del backend. El script <em>npm run deploy</em> despliega el backend actual en Fly.io.</p>\n<p><em>npm run deploy:full</em> combina estos dos scripts, es decir, <em>npm run build:ui</em> y <em>npm run deploy</em>.</p>\n<p>También hay un script <em>npm run logs:prod</em> para mostrar los logs de Fly.io.</p>\n<p>Ten en cuenta que las rutas de directorio en el script <i>build:ui</i> dependen de la ubicación de los repositorios en el sistema de archivos.</p>\n<h4>Render</h4>\n<p>Nota: Cuando intentes desplegar tu backend en Render, asegúrate de tener un repositorio separado para el backend y despliega ese repositorio de GitHub a través de Render. Intentar desplegar a través de tu repositorio Fullstackopen a menudo arrojará \"ERR path ....package.json\".</p>\n<p>En el caso de Render, los scripts se ven así:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//...</span>\n    <span class=\"token property\">\"build:ui\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rm -rf dist &amp;&amp; cd ../frontend &amp;&amp; npm run build &amp;&amp; cp -r dist ../backend\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"deploy:full\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build:ui &amp;&amp; git add . &amp;&amp; git commit -m uibuild &amp;&amp; git push\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>El script <em>npm run build:ui</em> construye el frontend y copia la versión de producción en el repositorio del backend. <em>npm run deploy:full</em> también contiene los comandos <i>git</i> necesarios para actualizar el repositorio del backend.</p>\n<p>Ten en cuenta que las rutas de directorio en el script <i>build:ui</i> dependen de la ubicación de los repositorios en el sistema de archivos.</p>\n<blockquote>\n<p><strong>NB</strong>  En Windows, los scripts de npm se ejecutan en cmd.exe como la shell predeterminada, que no admite comandos bash. Para que funcionen los comandos bash anteriores, puedes cambiar la shell predeterminada a Bash (en la instalación estándar de Git para Windows) de la siguiente manera:</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"language-md\"><code class=\"language-md\">npm config set script-shell \"C:\\\\Program Files\\\\git\\\\bin\\\\bash.exe\"</code></pre></div>\n<p>Otra opción es el uso de <a href=\"https://www.npmjs.com/package/shx\">shx</a>.</p>\n<h3>Proxy</h3>\n<p>Los cambios en el frontend han hecho que ya no funcione en el modo de desarrollo (cuando se inicia con el comando _npm run dev), ya que la conexión con el backend no funciona.</p>\n<picture><img src=\"/static/c2dc22eab2be6e45278c02055c079123/5a190/32new.png\" alt=\"pestaña Network mostrando un 404 al solicitar las notas\" srcset=\"/static/c2dc22eab2be6e45278c02055c079123/772e8/32new.png 200w,\n/static/c2dc22eab2be6e45278c02055c079123/e17e5/32new.png 400w,\n/static/c2dc22eab2be6e45278c02055c079123/5a190/32new.png 800w,\n/static/c2dc22eab2be6e45278c02055c079123/c1b63/32new.png 1200w,\n/static/c2dc22eab2be6e45278c02055c079123/29007/32new.png 1600w,\n/static/c2dc22eab2be6e45278c02055c079123/17d12/32new.png 1666w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Esto se debe al cambio de la dirección de backend a una URL relativa:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> baseUrl <span class=\"token operator\">=</span> <span class=\"token string\">'/api/notes'</span></code></pre></div>\n<p>Debido a que en el modo de desarrollo el frontend está en la dirección <i>localhost:5173</i>, las solicitudes al backend van a la dirección incorrecta <i>localhost:5173/api/notes</i>. El backend está en <i>localhost:3001</i>.</p>\n<p>Si el proyecto se creó con Vite, este problema es fácil de resolver. Es suficiente agregar la siguiente declaración al archivo <i>vite.config.js</i> del repositorio de frontend.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> <span class=\"token punctuation\">{</span> defineConfig <span class=\"token punctuation\">}</span> from <span class=\"token string\">'vite'</span>\n<span class=\"token function\">import</span> react from <span class=\"token string\">'@vitejs/plugin-react'</span>\n\n// https://vitejs.dev/config/\n<span class=\"token builtin class-name\">export</span> default defineConfig<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  plugins: <span class=\"token punctuation\">[</span>react<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>,\n<span class=\"gatsby-highlight-code-line\">  server: <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    proxy: <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token string\">'/api'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        target: <span class=\"token string\">'http://localhost:3001'</span>,</span><span class=\"gatsby-highlight-code-line\">        changeOrigin: true,</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span>,</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span>,</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Después de reiniciar, el entorno de desarrollo de React funcionará como un <a href=\"https://es.vitejs.dev/config/server-options#server-proxy\">proxy</a>. Si el código de React realiza una solicitud HTTP a una dirección de servidor en <i><a href=\"http://localhost:5173\">http://localhost:5173</a></i> no administrada por la aplicación React en sí (es decir, cuando las solicitudes no tratan de obtener el CSS o JavaScript de la aplicación), la solicitud se redirigirá a el servidor en <i><a href=\"http://localhost:3001\">http://localhost:3001</a></i>.</p>\n<p>Ten en cuenta que con la configuración de Vite mostrada anteriormente, solo las solicitudes realizadas a rutas que comienzan con <i>/api</i> se redirigen al servidor.</p>\n<p>Ahora el frontend funciona bien, trabajando con el servidor tanto en el modo de desarrollo como en el de producción.</p>\n<p>Un aspecto negativo de nuestro enfoque es lo complicado que resulta implementar el frontend. Desplegar una nueva versión requiere generar una nueva compilación de producción del frontend y copiarla al repositorio del backend. Esto dificulta la creación de un <a href=\"https://martinfowler.com/bliki/DeploymentPipeline.html\">pipeline de despliegue</a> automatizado. Un pipeline de despliegue es una forma automatizada y controlada de mover el código desde la computadora del desarrollador a través de diferentes pruebas y controles de calidad hasta el entorno de producción. La construcción de un pipeline de despliegue es el tema de la <a href=\"/en/part11\">parte 11</a> de este curso. Hay varias formas de lograr esto, por ejemplo, colocar tanto el código del backend como del frontend en el mismo repositorio, pero no profundizaremos en eso por ahora.</p>\n<p>En algunas situaciones, puede tener sentido implementar el código del frontend como su propia aplicación.</p>\n<p>El código actual del backend se puede encontrar en <a href=\"https://github.com/fullstack-hy2020/part3-notes-backend/tree/part3-3\">Github</a>, en la rama <i>part3-3</i>. Los cambios en el código del frontend están en la rama <i>part3-1</i> del <a href=\"https://github.com/fullstack-hy2020/part2-notes-frontend/tree/part3-1\">repositorio del frontend</a>.</p>\n</div>\n<div class=\"tasks\">\n<h3>Ejercicios 3.9.-3.11.</h3>\n<p>Los siguientes ejercicios no requieren muchas líneas de código. Sin embargo, pueden ser un desafío, porque debes comprender exactamente qué está sucediendo y dónde, y las configuraciones deben ser las correctas.</p>\n<h4>3.9 Backend de la Agenda Telefónica, paso 9</h4>\n<p>Haz que el backend funcione con el frontend de la agenda telefónica de los ejercicios de la parte anterior. No implementes todavía la funcionalidad para realizar cambios en los números de teléfono, que se implementará en el ejercicio 3.17.</p>\n<p>Probablemente tendrás que hacer algunos pequeños cambios en el frontend, al menos en las URL del backend. Recuerda mantener abierta la consola del desarrollador en tu navegador. Si algunas solicitudes HTTP fallan, debes verificar en la pestaña <i>Network</i> qué está sucediendo. Vigila también la consola del backend. Si no hiciste el ejercicio anterior, vale la pena imprimir los datos de la solicitud o <i>request.body</i> en la consola en el controlador de eventos responsable de las solicitudes POST.</p>\n<h4>3.10 Backend de la Agenda Telefónica, paso 10</h4>\n<p>Despliega el backend en Internet, por ejemplo en Fly.io o Render.</p>\n<p>Prueba el backend desplegado con un navegador y el REST client de VS Code o con Postman para asegurarte de que funcione.</p>\n<p><strong>PRO TIP:</strong> Cuando despliegues tu aplicación en Internet, vale la pena al menos al principio estar atento a los logs de la aplicación <strong>EN TODO MOMENTO</strong>.</p>\n<p>Crea un README.md en la raíz de tu repositorio y agrega un enlace a tu aplicación en línea.</p>\n<p><strong>NOTA</strong>: como se mencionó, debes desplegar el BACKEND al servicio en la nube. Si estás utilizando Fly.io, los comandos deben ejecutarse en el directorio raíz del backend (es decir, en el mismo directorio donde se encuentra el package.json del backend). En caso de usar Render, el backend debe estar en la raíz de tu repositorio.</p>\n<p>NO deberás desplegar el frontend directamente en ninguna etapa de esta parte. Solo se desplegara el repositorio del backend en todo este proceso, nada más.</p>\n<h4>3.11 Agenda Telefónica Full Stack</h4>\n<p>Genera un build de producción de tu frontend y agrégalo a la aplicación en Internet utilizando el método introducido en esta parte.</p>\n<p><strong>NB:</strong> Si usas Render, asegúrate de que el directorio <i>dist</i> no esté ignorado por Git en el backend.</p>\n<p>También, asegúrate de que el frontend aún funcione localmente (en modo de desarrollo cuando se inicia con el comando <em>npm run dev</em>).</p>\n<p>Si encuentras problemas para que la aplicación funcione, asegúrate de que tu estructura de directorios coincida con <a href=\"https://github.com/fullstack-hy2020/part3-notes-backend/tree/part3-3\">la aplicación de ejemplo</a>.</p>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/8ac7bc0fb2b7018a7853b00c454b2103/part-3.svg"},"part":3,"letter":"b","lang":"es"}}},"pageContext":{"part":3,"letter":"b","lang":"es"}},"staticQueryHashes":["3128451518"]}