{"componentChunkName":"component---src-templates-content-template-js","path":"/es/part3/validacion_y_es_lint","result":{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<p>Por lo general, existen restricciones que queremos aplicar a los datos que se almacenan en la base de datos de nuestra aplicación. Nuestra aplicación no debe aceptar notas que tengan una propiedad <i>content</i> vacía o faltante. La validez de la nota se comprueba en el controlador de ruta:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/notes'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">.</span>content <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'content missing'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Si la nota no tiene la propiedad <i>content</i>, respondemos a la solicitud con el código de estado <i>400 bad request</i>.</p>\n<p>Una forma más inteligente de validar el formato de los datos antes de que se almacenen en la base de datos es utilizar la funcionalidad de <a href=\"https://mongoosejs.com/docs/validation.html\">validación</a> disponible en Mongoose.</p>\n<p>Podemos definir reglas de validación específicas para cada campo en el esquema:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> noteSchema <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">mongoose<span class=\"token punctuation\">.</span>Schema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">minLength</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">required</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>  <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> Boolean\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>El campo <i>content</i> ahora requiere tener al menos cinco caracteres de longitud y esta definido como required, lo que significa que no puede faltar. No hemos agregado ninguna restricción al campo <i>important</i>, por lo que su definición en el esquema no ha cambiado.</p>\n<p>Los validadores <i>minlength</i> y <i>required</i> están <a href=\"https://mongoosejs.com/docs/validation.html#built-in-validators\">integrados</a> y proporcionados por Mongoose. La funcionalidad del <a href=\"https://mongoosejs.com/docs/validation.html#custom-validators\">validador personalizado</a> de Mongoose nos permite crear nuevos validadores, si ninguno de los integrados cubre nuestras necesidades.</p>\n<p>Si intentamos almacenar un objeto en la base de datos que rompe una de las restricciones, la operación lanzará una excepción. Cambiemos nuestro controlador para crear una nueva nota para que pase las posibles excepciones al middleware del controlador de errores:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\">app<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/notes'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body\n\n  <span class=\"token keyword\">const</span> note <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Note</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> body<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> body<span class=\"token punctuation\">.</span>important <span class=\"token operator\">||</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  note<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">savedNote</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>savedNote<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Expandamos el controlador de errores para tratar estos errores de validación:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">errorHandler</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'CastError'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'malformatted id'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'ValidationError'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> error<span class=\"token punctuation\">.</span>message <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cuando falla la validación de un objeto, devolvemos el siguiente mensaje de error predeterminado de Mongoose:</p>\n<picture><img src=\"/static/6beb35ed56d2e06e0eda3e36dea9f426/5a190/50.png\" alt=\"postman mostrando mensaje de error\" srcset=\"/static/6beb35ed56d2e06e0eda3e36dea9f426/772e8/50.png 200w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/e17e5/50.png 400w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/5a190/50.png 800w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/c1b63/50.png 1200w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/29007/50.png 1600w,\n/static/6beb35ed56d2e06e0eda3e36dea9f426/1e1c3/50.png 1670w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Notamos que el backend ahora tiene un problema: las validaciones no se realizan al editar una nota.\nLa <a href=\"https://github.com/blakehaswell/mongoose-unique-validator#find--updates\">documentación</a> aborda el problema explicando que las validaciones no se ejecutan por defecto cuando se utilizan los métodos <i>findOneAndUpdate</i> y métodos relacionados.</p>\n<p>La solución es sencilla. También reformulemos un poco el código de la ruta:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/notes/:id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> content<span class=\"token punctuation\">,</span> important <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body</span>\n  Note<span class=\"token punctuation\">.</span><span class=\"token function\">findByIdAndUpdate</span><span class=\"token punctuation\">(</span>\n    request<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> \n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">{</span> content<span class=\"token punctuation\">,</span> important <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">{</span> <span class=\"token keyword\">new</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">runValidators</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">context</span><span class=\"token operator\">:</span> <span class=\"token string\">'query'</span> <span class=\"token punctuation\">}</span></span>  <span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">updatedNote</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>updatedNote<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Desplegando el backend con base de datos a producción</h3>\n<p>La aplicación debería funcionar casi tal como está en Fly.io/Render. No necesitamos generar una nueva versión de producción del frontend, ya que los cambios realizados hasta ahora solo afectan a nuestro backend.</p>\n<p>Las variables de entorno definidas en dotenv solo se usarán cuando el backend no esté en <i>modo de producción</i>, es decir, en Fly.io o Render.</p>\n<p>Para producción, debemos establecer la URL de la base de datos en el servicio que está alojando nuestra aplicación.</p>\n<p>En Fly.io se hace con <em>fly secrets set</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">fly secrets <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">MONGODB_URI</span><span class=\"token operator\">=</span><span class=\"token string\">'mongodb+srv://fullstack:thepasswordishere@cluster0.o1opl.mongodb.net/noteApp?retryWrites=true&amp;w=majority'</span></code></pre></div>\n<p>Cuando la aplicación está en desarrollo, es muy probable que algo falle. Por ejemplo, cuando desplegué mi aplicación por primera vez con la base de datos, no se veía ni una sola nota:</p>\n<picture><img src=\"/static/ba06b14a502f7da32b06c9cd2e79f97b/5a190/fly-problem1.png\" alt=\"navegador sin notas\" srcset=\"/static/ba06b14a502f7da32b06c9cd2e79f97b/772e8/fly-problem1.png 200w,\n/static/ba06b14a502f7da32b06c9cd2e79f97b/e17e5/fly-problem1.png 400w,\n/static/ba06b14a502f7da32b06c9cd2e79f97b/5a190/fly-problem1.png 800w,\n/static/ba06b14a502f7da32b06c9cd2e79f97b/c1b63/fly-problem1.png 1200w,\n/static/ba06b14a502f7da32b06c9cd2e79f97b/29007/fly-problem1.png 1600w,\n/static/ba06b14a502f7da32b06c9cd2e79f97b/da952/fly-problem1.png 1872w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>La pestaña de red de la consola del navegador reveló que la obtención de las notas no tuvo éxito; la solicitud permaneció en estado <em>pendiente</em> durante mucho tiempo hasta que falló con un código de estado 502.</p>\n<p>¡La consola del navegador debe estar abierta <i>todo el tiempo!</i></p>\n<p>También es vital seguir continuamente los registros del servidor. El problema se hizo evidente cuando se abrieron los registros con <em>fly logs</em>:</p>\n<picture><img src=\"/static/92ac2c6e2e4d0f84bb7a5a5317708d75/5a190/fly-problem3.png\" alt=\"registro del servidor fly.io mostrando conexión a undefined\" srcset=\"/static/92ac2c6e2e4d0f84bb7a5a5317708d75/772e8/fly-problem3.png 200w,\n/static/92ac2c6e2e4d0f84bb7a5a5317708d75/e17e5/fly-problem3.png 400w,\n/static/92ac2c6e2e4d0f84bb7a5a5317708d75/5a190/fly-problem3.png 800w,\n/static/92ac2c6e2e4d0f84bb7a5a5317708d75/c1b63/fly-problem3.png 1200w,\n/static/92ac2c6e2e4d0f84bb7a5a5317708d75/29007/fly-problem3.png 1600w,\n/static/92ac2c6e2e4d0f84bb7a5a5317708d75/7970d/fly-problem3.png 1908w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>La URL de la base de datos era <em>undefined</em>, por lo que el comando <em>fly secrets set MONGODB_URI</em> no fue utilizado.</p>\n<p>Cuando se utiliza Render, la URL de la base de datos se proporciona definiendo la variable de entorno adecuada en el panel de control:</p>\n<picture><img src=\"/static/ae7c73092becbbef8aa45299e9b8fbcd/5a190/render-env.png\" alt=\"Render Dashboard mostrando la variable de entorno MONGODB_URI\" srcset=\"/static/ae7c73092becbbef8aa45299e9b8fbcd/772e8/render-env.png 200w,\n/static/ae7c73092becbbef8aa45299e9b8fbcd/e17e5/render-env.png 400w,\n/static/ae7c73092becbbef8aa45299e9b8fbcd/5a190/render-env.png 800w,\n/static/ae7c73092becbbef8aa45299e9b8fbcd/c1b63/render-env.png 1200w,\n/static/ae7c73092becbbef8aa45299e9b8fbcd/29007/render-env.png 1600w,\n/static/ae7c73092becbbef8aa45299e9b8fbcd/97a96/render-env.png 2400w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>El panel de control de Render muestra los registros del servidor:</p>\n<picture><img src=\"/static/798d2488fb450327abf2b6729faaaeec/5a190/r7.png\" alt=\"Render Dashboard con flecha apuntando al servidor en ejecución en el puerto 10000\" srcset=\"/static/798d2488fb450327abf2b6729faaaeec/772e8/r7.png 200w,\n/static/798d2488fb450327abf2b6729faaaeec/e17e5/r7.png 400w,\n/static/798d2488fb450327abf2b6729faaaeec/5a190/r7.png 800w,\n/static/798d2488fb450327abf2b6729faaaeec/c1b63/r7.png 1200w,\n/static/798d2488fb450327abf2b6729faaaeec/29007/r7.png 1600w,\n/static/798d2488fb450327abf2b6729faaaeec/b5c8e/r7.png 2194w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Puedes encontrar el código de nuestra aplicación actual en su totalidad en la rama <i>part3-6</i> de <a href=\"https://github.com/fullstack-hy2020/part3-notes-backend/tree/part3-6\">este repositorio de GitHub</a>.</p>\n</div>\n<div class=\"tasks\">\n<h3>Ejercicios 3.19.-3.21.</h3>\n<h4>3.19*: Base de datos de la Agenda Telefónica, paso 7</h4>\n<p>Amplía la validación para que el nombre almacenado en la base de datos tenga al menos tres caracteres de longitud.</p>\n<p>Expande el frontend para que muestre algún tipo de mensaje de error cuando ocurra un error de validación. El manejo de errores se puede implementar agregando un bloque <em>catch</em> como se muestra a continuación:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">personService\n    <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">createdPerson</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// está es la forma de acceder al mensaje de error</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Puedes mostrar el mensaje de error predeterminado devuelto por Mongoose, aunque no son muy legibles:</p>\n<picture><img src=\"/static/fddf847e340f060549c3029f464a5493/5a190/56e.png\" alt=\"captura de pantalla de la agenda telefónica que muestra el fallo de validación de la persona\" srcset=\"/static/fddf847e340f060549c3029f464a5493/772e8/56e.png 200w,\n/static/fddf847e340f060549c3029f464a5493/e17e5/56e.png 400w,\n/static/fddf847e340f060549c3029f464a5493/5a190/56e.png 800w,\n/static/fddf847e340f060549c3029f464a5493/c1b63/56e.png 1200w,\n/static/fddf847e340f060549c3029f464a5493/29007/56e.png 1600w,\n/static/fddf847e340f060549c3029f464a5493/f4fb1/56e.png 1766w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p><strong>NB:</strong> En las operaciones de actualización, los validadores de mongoose están desactivados por defecto. <a href=\"https://mongoosejs.com/docs/validation.html\">Lee la documentación</a> para ver cómo habilitarlos.</p>\n<h4>3.20*: Base de datos de la Agenda Telefónica, paso 8</h4>\n<p>Agrega validación a tu aplicación de agenda telefónica para asegurarte de que los números de teléfono tengan el formato correcto. Un número de teléfono debe:</p>\n<ul>\n<li>Tener una longitud de 8 o más caracteres.</li>\n<li>\n<p>Estar formado por dos partes separadas por -, la primera parte tiene dos o tres números y la segunda parte también consiste en números.</p>\n<ul>\n<li>Por ejemplo, 09-1234556 y 040-22334455 son números de teléfono válidos.</li>\n<li>Por ejemplo, 1234556, 1-22334455 y 10-22-334455 son inválidos.</li>\n</ul>\n</li>\n</ul>\n<p>Utiliza un <a href=\"https://mongoosejs.com/docs/validation.html#custom-validators\">validador personalizado</a> para implementar la segunda parte de la validación.</p>\n<p>Si una solicitud HTTP POST intenta agregar una persona con un número de teléfono no válido, el servidor debería responder con un código de estado apropiado y un mensaje de error.</p>\n<h4>3.21 Desplegando el backend con base de datos en producción</h4>\n<p>Genera una nueva versión \"full stack\" de la aplicación creando una nueva compilación de producción del frontend y copiándola al repositorio del backend. Verifica que todo funcione localmente utilizando la aplicación completa desde la dirección <a href=\"http://localhost:3001/\">http://localhost:3001/</a>.</p>\n<p>Lleva la versión más reciente a Fly.io/Render y verifica que todo funcione allí también.</p>\n<p><strong>NOTA</strong>: debes desplegar el BACKEND en el servicio en la nube. Si estás utilizando Fly.io, los comandos deben ejecutarse en el directorio raíz del backend (es decir, en el mismo directorio donde se encuentra el package.json del backend). En caso de usar Render, el backend debe estar en la raíz de tu repositorio.</p>\n<p>NO debes desplegar el frontend directamente en ninguna etapa de esta parte. Es solo el repositorio del backend que se despliega en toda esta sección, nada más.</p>\n</div>\n<div class=\"content\">\n<h3>Lint</h3>\n<p>Antes de pasar a la siguiente parte, veremos una herramienta importante llamada <a href=\"https://es.wikipedia.org/wiki/Lint\">lint</a>. Wikipedia dice lo siguiente sobre lint:</p>\n<blockquote>\n<p><i>Genéricamente, lint o linter es cualquier herramienta que detecta y marca errores en los lenguajes de programación, incluidos los errores de estilo. El término comportamiento lint-like a veces se aplica al proceso de marcar el uso de lenguaje sospechoso. Las herramientas de tipo lint generalmente realizan análisis estáticos del código fuente.</i></p>\n</blockquote>\n<p>En lenguajes compilados de tipado estático como Java, los IDE como NetBeans pueden señalar errores en el código, incluso aquellos que son más que simples errores de compilación. Se pueden utilizar herramientas adicionales para realizar <a href=\"https://es.wikipedia.org/wiki/An%C3%A1lisis_est%C3%A1tico_de_software\">análisis estáticos</a>, como <a href=\"https://checkstyle.sourceforge.io\">checkstyle</a>, para ampliar las capacidades del IDE y señalar también problemas relacionados con el estilo, como la indentación.</p>\n<p>En el universo de JavaScript, la herramienta líder actual para el análisis estático (también conocida como \"linting\") es <a href=\"https://eslint.org/\">ESlint</a>.</p>\n<p>Instalemos ESlint como una dependencia de desarrollo del proyecto de backend con el comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> eslint --save-dev</code></pre></div>\n<p>Después de esto, podemos inicializar una configuración predeterminada de ESlint con el comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx eslint <span class=\"token parameter variable\">--init</span></code></pre></div>\n<p>Responderemos todas las preguntas:</p>\n<picture><img src=\"/static/a7cfec0c6a43ac7e5580e7ea1a9b0260/5a190/52new.png\" alt=\"salida del terminal de ESlint init\" srcset=\"/static/a7cfec0c6a43ac7e5580e7ea1a9b0260/772e8/52new.png 200w,\n/static/a7cfec0c6a43ac7e5580e7ea1a9b0260/e17e5/52new.png 400w,\n/static/a7cfec0c6a43ac7e5580e7ea1a9b0260/5a190/52new.png 800w,\n/static/a7cfec0c6a43ac7e5580e7ea1a9b0260/c1b63/52new.png 1200w,\n/static/a7cfec0c6a43ac7e5580e7ea1a9b0260/29007/52new.png 1600w,\n/static/a7cfec0c6a43ac7e5580e7ea1a9b0260/fb937/52new.png 1820w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>La configuración se guardará en el archivo <em>.eslintrc.js</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'env'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'commonjs'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'es2021'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token string-property property\">'node'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'extends'</span><span class=\"token operator\">:</span> <span class=\"token string\">'eslint:recommended'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'parserOptions'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'ecmaVersion'</span><span class=\"token operator\">:</span> <span class=\"token string\">'latest'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'rules'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'indent'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token number\">4</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'linebreak-style'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'unix'</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'quotes'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'single'</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'semi'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'never'</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cambiemos inmediatamente la regla relativa a la indentación, de modo que el nivel de indentación sea de dos espacios.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string-property property\">\"indent\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">2</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Se puede inspeccionar y validar un archivo como <em>index.js</em> con el siguiente comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx eslint index.js</code></pre></div>\n<p>Se recomienda crear un <em>script npm</em> separado para linting:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node index.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nodemon index.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint .\"</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ahora, el comando <em>npm run lint</em> comprobará todos los archivos del proyecto.</p>\n<p>Además, los archivos del directorio <em>dist</em> se comprueban cuando se ejecuta el comando. No queremos que esto suceda, y podemos lograrlo creando un archivo <a href=\"https://eslint.org/docs/latest/use/configure/ignore#the-eslintignore-file\">.eslintignore</a> en la raíz del proyecto con el siguiente contenido:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">dist</code></pre></div>\n<p>Esto hace que el directorio <em>dist</em> no sea comprobado por ESlint.</p>\n<p>Lint tiene mucho que decir sobre nuestro código:</p>\n<picture><img src=\"/static/cdf7d27db507f48c4ab9f7bd59f8071f/5a190/53ea.png\" alt=\"salida de consola con errores de ESlint\" srcset=\"/static/cdf7d27db507f48c4ab9f7bd59f8071f/772e8/53ea.png 200w,\n/static/cdf7d27db507f48c4ab9f7bd59f8071f/e17e5/53ea.png 400w,\n/static/cdf7d27db507f48c4ab9f7bd59f8071f/5a190/53ea.png 800w,\n/static/cdf7d27db507f48c4ab9f7bd59f8071f/c1b63/53ea.png 1200w,\n/static/cdf7d27db507f48c4ab9f7bd59f8071f/d7ceb/53ea.png 1446w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>No solucionemos estos problemas todavía.</p>\n<p>Una mejor alternativa a ejecutar el linter desde la línea de comandos es configurar un <i>eslint-plugin</i> en el editor, que ejecuta el linter continuamente. Al usar el plugin, verá errores en su código de inmediato. Puede encontrar más información sobre el plugin Visual Studio ESLint <a href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\">aquí</a>.</p>\n<p>El plugin de VS Code ESlint subrayará las violaciones de estilo con una línea roja:</p>\n<picture><img src=\"/static/64cf2fbae36000083aa1e48292aed8f2/5a190/54a.png\" alt=\"plugin de ESlint mostrando errores en el código\" srcset=\"/static/64cf2fbae36000083aa1e48292aed8f2/772e8/54a.png 200w,\n/static/64cf2fbae36000083aa1e48292aed8f2/e17e5/54a.png 400w,\n/static/64cf2fbae36000083aa1e48292aed8f2/5a190/54a.png 800w,\n/static/64cf2fbae36000083aa1e48292aed8f2/c1b63/54a.png 1200w,\n/static/64cf2fbae36000083aa1e48292aed8f2/29007/54a.png 1600w,\n/static/64cf2fbae36000083aa1e48292aed8f2/17009/54a.png 1932w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Esto hace que los errores sean fáciles de detectar y puedan ser corregidos de inmediato.</p>\n<p>ESlint tiene una amplia gama de <a href=\"https://eslint.org/docs/rules/\">reglas</a> que son fáciles de usar al editar el archivo <i>.eslintrc.js</i>.</p>\n<p>Agreguemos la regla <a href=\"https://eslint.org/docs/rules/eqeqeq\">eqeqeq</a> que nos alerta si la igualdad se verifica con algo que no sea el operador de triple igual. La regla se agrega bajo el campo <i>rules</i> en el archivo de configuración.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token string-property property\">'rules'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n   <span class=\"token string-property property\">'eqeqeq'</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ya que estamos en eso, hagamos algunos otros cambios en las reglas.</p>\n<p>Evitemos los <a href=\"https://eslint.org/docs/rules/no-trailing-spaces\">espacios finales innecesarios</a> al final de las líneas, exijamos que <a href=\"https://eslint.org/docs/rules/object-curly-spacing\">siempre haya un espacio antes y después de las llaves</a>, y exijamos también un uso consistente de espacios en blanco en los parámetros de función de las funciones de flecha.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token string-property property\">'rules'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string-property property\">'eqeqeq'</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'no-trailing-spaces'</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'object-curly-spacing'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'always'</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'arrow-spacing'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'before'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'after'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nuestra configuración predeterminada utiliza un montón de reglas predeterminadas de <i>eslint:recommended</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">'extends'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'eslint:recommended'</span>,</code></pre></div>\n<p>Esto incluye una regla que advierte sobre los comandos <em>console.log</em>. La <a href=\"https://eslint.org/docs/latest/use/configure/rules\">desactivación</a> de una regla se puede lograr definiendo su \"valor\" como 0 en el archivo de configuración. Mientras tanto, hagamos esto para la regla <i>no-console</i>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token string-property property\">'rules'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string-property property\">'eqeqeq'</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'no-trailing-spaces'</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'object-curly-spacing'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'always'</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'arrow-spacing'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'before'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'after'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token string-property property\">'no-console'</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>NB</strong> cuando realizas cambios en el archivo <i>.eslintrc.js</i>, se recomienda ejecutar el linter desde la línea de comandos. Esto verificará que el archivo de configuración esté formateado correctamente:</p>\n<picture><img src=\"/static/683365a382c607616d65e603f8d8d39a/5a190/55.png\" alt=\"salida de terminal del comando npm run lint\" srcset=\"/static/683365a382c607616d65e603f8d8d39a/772e8/55.png 200w,\n/static/683365a382c607616d65e603f8d8d39a/e17e5/55.png 400w,\n/static/683365a382c607616d65e603f8d8d39a/5a190/55.png 800w,\n/static/683365a382c607616d65e603f8d8d39a/c1b63/55.png 1200w,\n/static/683365a382c607616d65e603f8d8d39a/29007/55.png 1600w,\n/static/683365a382c607616d65e603f8d8d39a/7575b/55.png 1608w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Si hay algún problema en tu archivo de configuración, el plugin lint puede comportarse de manera bastante errática.</p>\n<p>Muchas empresas definen estándares de codificación que se aplican en toda la organización a través del archivo de configuración de ESlint. No se recomienda seguir reinventando la rueda una y otra vez, y puede ser una buena idea adoptar una configuración ya hecha del proyecto de otra persona en el tuyo. Recientemente, muchos proyectos han adoptado la <a href=\"https://github.com/airbnb/javascript\">guía de estilo Javascript</a> de Airbnb al utilizar la configuración <a href=\"https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb\">ESlint</a> de Airbnb.</p>\n<p>Puedes encontrar el código para nuestra aplicación actual en su totalidad en la rama <i>part3-7</i> de <a href=\"https://github.com/fullstack-hy2020/part3-notes-backend/tree/part3-7\">este repositorio de GitHub</a>.</p>\n</div>\n<div class=\"tasks\">\n<h3>Ejercicio 3.22.</h3>\n<h4>3.22: Configuración de Lint</h4>\n<p>Agrega ESlint a tu aplicación y corrige todas las advertencias.</p>\n<p>Este fue el último ejercicio de esta parte del curso. Es hora de enviar tu código a GitHub y marcar todos tus ejercicios terminados en el <a href=\"https://studies.cs.helsinki.fi/stats/courses/fullstackopen\">sistema de envío de ejercicios</a>.</p>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/8ac7bc0fb2b7018a7853b00c454b2103/part-3.svg"},"part":3,"letter":"d","lang":"es"}}},"pageContext":{"part":3,"letter":"d","lang":"es"}},"staticQueryHashes":["3128451518"]}