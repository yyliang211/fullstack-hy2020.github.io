{"componentChunkName":"component---src-templates-content-template-js","path":"/es/part1/introduccion_a_react","result":{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<p>Ahora comenzaremos a familiarizarnos con probablemente el tema más importante de este curso, es decir, la librería <a href=\"https://es.react.dev/\">React</a>. Comencemos con la creación de una aplicación React simple y con el conocimiento de los conceptos básicos de React.</p>\n<p>La forma más fácil de empezar es utilizando una herramienta llamada <a href=\"https://es.vitejs.dev/\">Vite</a>.</p>\n<p>Comencemos creando una aplicación llamada <i>part1</i>, navegar a este directorio e instalando las librerias:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># npm 6.x (desactualizado, pero aun en uso por algunos):</span>\n<span class=\"token function\">npm</span> create vite@latest part1 <span class=\"token parameter variable\">--template</span> react\n\n<span class=\"token comment\"># npm 7+, el doble guion adicional es necesario:</span>\n<span class=\"token function\">npm</span> create vite@latest part1 -- <span class=\"token parameter variable\">--template</span> react</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> part1\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span></code></pre></div>\n<p>La aplicación se inicia de la siguiente manera</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run dev</code></pre></div>\n<p>La consola indica que la aplicación ha iniciado en localhost, puerto 5173, es decir la dirección <a href=\"http://localhost:5173/\">http://localhost:5173/</a>:</p>\n<picture><img src=\"/static/351b69b3e5d9c096040fdffd9ba004c6/5a190/1-vite1.png\" alt=\"Captura de pantalla de la consola ejecutando vite en localhost 5173\" srcset=\"/static/351b69b3e5d9c096040fdffd9ba004c6/772e8/1-vite1.png 200w,\n/static/351b69b3e5d9c096040fdffd9ba004c6/e17e5/1-vite1.png 400w,\n/static/351b69b3e5d9c096040fdffd9ba004c6/5a190/1-vite1.png 800w,\n/static/351b69b3e5d9c096040fdffd9ba004c6/5819f/1-vite1.png 1042w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Vite inicia la aplicación <a href=\"https://es.vitejs.dev/config/server-options.html#server-port\">por defecto</a> en el puerto 5173. Si este no está libre, Vite utiliza el siguiente numero de puerto libre.</p>\n<p>Abre el navegador y un editor de código para que puedas ver el código y el navegador al mismo tiempo en la pantalla:</p>\n<picture><img src=\"/static/69d2f3a26b31ab0723f4e119690005b0/5a190/1-vite4.png\" alt=\"Captura de pantalla de la pagina inicial de vite y estructura de archivos en vs code\" srcset=\"/static/69d2f3a26b31ab0723f4e119690005b0/772e8/1-vite4.png 200w,\n/static/69d2f3a26b31ab0723f4e119690005b0/e17e5/1-vite4.png 400w,\n/static/69d2f3a26b31ab0723f4e119690005b0/5a190/1-vite4.png 800w,\n/static/69d2f3a26b31ab0723f4e119690005b0/c1b63/1-vite4.png 1200w,\n/static/69d2f3a26b31ab0723f4e119690005b0/29007/1-vite4.png 1600w,\n/static/69d2f3a26b31ab0723f4e119690005b0/1e1c3/1-vite4.png 1670w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>El código de la aplicación se encuentra en la carpeta <i>src</i>. Simplifiquemos el código predeterminado de tal modo que el archivo main.jsx se vea así:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/client'</span>\n\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>y el archivo <i>App.jsx</i> se vea así:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello world<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Los archivos <i>App.css</i> y <i>index.css</i>, y el directorio <i>assets</i> pueden eliminarse ya que nos son necesarios en nuestra aplicación por ahora.</p>\n<h3>create-react-app</h3>\n<p>En lugar de Vite, tu puedes usar la vieja herramienta de generación <a href=\"https://github.com/facebookincubator/create-react-app\">create-react-app</a> en el curso para inicializar aplicaciones. La diferencia más visible es el nombre del archivo de arranque de la aplicación, el cual es <i>index.js</i>.</p>\n<p>La manera de iniciar la aplicación también es diferente en CRA, en esta se inicia con el comando</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> start</code></pre></div>\n<p>en contraste con Vite</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run dev</code></pre></div>\n<p>El curso actualmente (11 de agosto de 2023) está siendo actualizado para usar Vite. Algunas partes aun usan la aplicación base creada con create-react-app.</p>\n<h3>Componente</h3>\n<p>El archivo <i>App.js</i> ahora define un <a href=\"https://es.legacy.reactjs.org/docs/components-and-props.html\">componente</a> de React con el nombre <i>App</i>. El comando en la línea final del archivo <i>main.jsx</i></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>renderiza su contenido dentro del elemento <i>div</i>, definido en el archivo <i>index.html</i>, que tiene el valor 'root' en el atributo <i>id</i>.</p>\n<p>De forma predeterminada, el archivo <i>index.html</i> no contiene ningún marcado HTML que sea visible para nosotros en el navegador. </p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">doctype</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/svg+xml<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/vite.svg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Vite + React<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/main.jsx<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Puedes intentar agregar algo de HTML al archivo. Sin embargo, cuando se usa React, todo el contenido que necesita ser renderizado es generalmente definido como componentes de React.</p>\n<p>Echemos un vistazo mas de cerca al código que define el componente:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello world<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Como probablemente adivinaste, el componente se renderiza como una etiqueta <i>div</i>, que envuelve una etiqueta <i>p</i> que contiene el texto <i>Hello world</i>.</p>\n<p>Técnicamente, el componente se define como una función de JavaScript. La siguiente es una función (que no recibe ningún parámetro):</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello world<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>La función luego se asigna a un variable constante <i>App</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> App <span class=\"token operator\">=</span> <span class=\"token operator\">...</span></code></pre></div>\n<p>Hay algunas formas de definir funciones en JavaScript. Aquí utilizaremos <a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">funciones de flecha</a>, que se describen en una versión más reciente de JavaScript conocida como <a href=\"http://es6-features.org/#Constants\">ECMAScript 6</a>, también llamada ES6.</p>\n<p>Debido a que la función consta de una sola expresión, hemos utilizado una abreviatura, que representa este fragmento de código:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello world<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>En otras palabras, la función devuelve el valor de la expresión.</p>\n<p>La función que define el componente puede contener cualquier tipo de código JavaScript. Modifica tu componente para que sea de la siguiente manera:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello from component'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello world<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>y observa lo que sucede en la consola:</p>\n<picture><img src=\"/static/4a9dce49d75016ac6b0a1ef1671816b3/5a190/30.png\" alt=\"Consola del navegador mostrando un registro en consola con flecha a &#x22;Hello from component&#x22;\" srcset=\"/static/4a9dce49d75016ac6b0a1ef1671816b3/772e8/30.png 200w,\n/static/4a9dce49d75016ac6b0a1ef1671816b3/e17e5/30.png 400w,\n/static/4a9dce49d75016ac6b0a1ef1671816b3/5a190/30.png 800w,\n/static/4a9dce49d75016ac6b0a1ef1671816b3/c1b63/30.png 1200w,\n/static/4a9dce49d75016ac6b0a1ef1671816b3/29007/30.png 1600w,\n/static/4a9dce49d75016ac6b0a1ef1671816b3/c6720/30.png 1922w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>La primera regla del desarrollo web frontend:</p>\n<blockquote>\n<p><i>deja la consola abierta todo el tiempo</i></p>\n</blockquote>\n<p>Repitamos esto juntos: <i>Prometo dejar la consola abierta todo el tiempo</i> durante este curso, y por el resto de mi vida mientras esté haciendo desarrollo web.</p>\n<p>También es posible renderizar contenido dinámico dentro de un componente.</p>\n<p>Modifica el componente de la siguiente manera:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> now <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n  <span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>now<span class=\"token punctuation\">,</span> a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello world<span class=\"token punctuation\">,</span> it is <span class=\"token punctuation\">{</span>now<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">}</span> plus <span class=\"token punctuation\">{</span>b<span class=\"token punctuation\">}</span> is <span class=\"token punctuation\">{</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cualquier código de JavaScript entre llaves es evaluado y el resultado de esta evaluación se incrusta en el lugar definido en el HTML producido por el componente.</p>\n<p>Recuerda que no deberías eliminar la línea al final del componente</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>El export no se muestra en la mayoría de los ejemplos del material de este curso. Sin este export el componente y la aplicación completa se romperían.</p>\n<p>¿Recuerdas que prometiste dejar la consola abierta? ¿Qué se imprimió allí?</p>\n<h3>JSX</h3>\n<p>Parece que los componentes de React están devolviendo marcado HTML. Sin embargo, éste no es el caso. El diseño de los componentes de React se escribe principalmente usando <a href=\"https://es.react.dev/learn/writing-markup-with-jsx\">JSX</a>. Aunque JSX se parece a HTML, en realidad estamos tratando con una forma de escribir JavaScript. Bajo el capó, el JSX devuelto por los componentes de React se compila en JavaScript. </p>\n<p>Después de compilar, nuestra aplicación se ve así: </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> now <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n  <span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n  <span class=\"token keyword\">return</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hello world, it is '</span><span class=\"token punctuation\">,</span> now<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> <span class=\"token string\">' plus '</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> <span class=\"token string\">' is '</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">+</span> b\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>La compilación está a cargo de <a href=\"https://babeljs.io/repl/\">Babel</a>. Los proyectos creados con <em>create-react-app</em> o <em>vite</em> están configurados para compilarse automáticamente. Aprenderemos más sobre este tema en la <a href=\"/es/part7\">parte 7</a> de este curso.</p>\n<p>También es posible escribir React como \"JavaScript puro\" sin usar JSX. Aunque, nadie con una mente sana lo haría realmente.</p>\n<p>En la práctica, JSX se parece mucho a HTML con la distinción de que con JSX puede incrustar fácilmente contenido dinámico escribiendo JavaScript apropiado entre llaves. La idea de JSX es bastante similar a muchos lenguajes de plantillas, como Thymeleaf, que se utiliza junto con Java Spring, que se utiliza en servidores.</p>\n<p>JSX es similar a <a href=\"https://developer.mozilla.org/es/docs/Web/XML/XML_introduction\">XML</a>, lo que significa que todas las etiquetas deben cerrarse. Por ejemplo, una nueva línea es un elemento vacío, que en HTML se puede escribir de la siguiente manera: </p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>pero al escribir JSX, la etiqueta debe estar cerrada: </p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<h3>Componentes múltiples</h3>\n<p>Modifiquemos el archivo <i>App.jsx</i> de la siguiente manera:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Hello</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello world<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>Hello <span class=\"token operator\">/</span><span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Hemos definido un nuevo componente <i>Hello</i> y lo usamos dentro del componente <i>App</i>. Naturalmente, un componente se puede usar múltiples veces:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Hello <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>Hello <span class=\"token operator\">/</span><span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>Hello <span class=\"token operator\">/</span><span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Nota:</strong> El <em>export</em> al final se omite en estos ejemplos ahora y en el futuro. Todavía será necesario para que el código funcione.</p>\n<p>Escribir componentes con React es fácil, y al combinar componentes, incluso una aplicación más compleja puede ser bastante fácil de mantener. De hecho, una filosofía central de React es componer aplicaciones a partir de muchos componentes reutilizables especializados.</p>\n<p>Otra fuerte convención es la idea de un <i>componente raíz</i> llamado <i>App</i> en la parte superior del árbol de componentes de la aplicación. Sin embargo, como aprenderemos en la <a href=\"/es/part6\">parte 6</a>, hay situaciones en las que el componente <i>App</i> no es exactamente la raíz, sino que está incluido en un componente de utilidad apropiado.</p>\n<h3>props: pasar datos a componentes</h3>\n<p>Es posible pasar datos a componentes usando los llamados <a href=\"https://es.legacy.reactjs.org/docs/components-and-props.html\">props</a>.</p>\n<p>Modifiquemos el componente <i>Hello</i> de la siguiente manera:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Hello</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Hello <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ahora la función que define el componente tiene un parámetro <i>props</i>. Como argumento, el parámetro recibe un objeto, que tiene campos correspondientes a todos los \"props\" (\"accesorios\") que el usuario del componente define.</p>\n<p>Los props se definen de la siguiente manera:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token string\">'George'</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token string\">'Daisy'</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Puede haber un número arbitrario de props y sus valores pueden ser strings \"incrustados en el código\" (\"hard coded\") o resultados de expresiones JavaScript. Si el valor del prop se obtiene usando JavaScript, debe estar envuelto con llaves. </p>\n<p>Modifiquemos el código para que el componente <i>Hello</i> use dos props: </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Hello</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">        Hello <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> you are <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">}</span> years old</span>      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Peter'</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> age <span class=\"token operator\">=</span> <span class=\"token number\">10</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token string\">'Maya'</span> age<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">26</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span> age<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Los props enviados por el componente <i>App</i> son los valores de las variables, el resultado de la evaluación de la expresión de suma y un string regular.</p>\n<p>El componente <i>Hello</i> también imprime en consola el valor del objeto props.</p>\n<p>Yo realmente espero que tu consola esté abierta. Si no es asi, recuerda tu promesa:</p>\n<blockquote>\n<p><i>Prometo dejar la consola abierta todo el tiempo</i> durante este curso, y por el resto de mi vida mientras esté haciendo desarrollo web.</p>\n</blockquote>\n<p>El desarrollo de software es dificil. Este se vuelve aun más dificil si uno no está usando todas las herramientas disponibles como la consola de desarrollo e imprimiendo la depuración con <em>console.log</em>. Los profesionales usan ambas <i>todo el tiempo</i> y no hay una sola razón de porque un principiante no debería adoptar estos maravillosos métodos de ayuda que hacen la vida más fácil.</p>\n<h3>Posible mensaje de error</h3>\n<p>Dependiendo del editor que estés usando, podrías recibir un mensaje de error en este punto:</p>\n<picture><img src=\"/static/f60ddf389a14091ea5d9514a022e576f/5a190/1-vite5.png\" alt=\"Captura de pantalla de vs code mostrando un error de eslint: &#x22;name is missing in props validation&#x22;\" srcset=\"/static/f60ddf389a14091ea5d9514a022e576f/772e8/1-vite5.png 200w,\n/static/f60ddf389a14091ea5d9514a022e576f/e17e5/1-vite5.png 400w,\n/static/f60ddf389a14091ea5d9514a022e576f/5a190/1-vite5.png 800w,\n/static/f60ddf389a14091ea5d9514a022e576f/c1b63/1-vite5.png 1200w,\n/static/f60ddf389a14091ea5d9514a022e576f/29007/1-vite5.png 1600w,\n/static/f60ddf389a14091ea5d9514a022e576f/e7aec/1-vite5.png 1726w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Este realmente no es un error, es una advertencia causada por la herramienta <a href=\"https://es.eslint.org/\">ESLint</a>. Tu puedes silenciar la advertencia <a href=\"https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/prop-types.md\">react/prop-types</a> añadiendo la siguiente línea al archivo <i>.eslintrc.cjs</i></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token literal-property property\">root</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">env</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">browser</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">es2020</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n     <span class=\"token string\">'eslint:recommended'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'plugin:react/recommended'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'plugin:react/jsx-runtime'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'plugin:react-hooks/recommended'</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">ignorePatterns</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'dist'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.eslintrc.cjs'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">parserOptions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">ecmaVersion</span><span class=\"token operator\">:</span> <span class=\"token string\">'latest'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">sourceType</span><span class=\"token operator\">:</span> <span class=\"token string\">'module'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">settings</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">react</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">version</span><span class=\"token operator\">:</span> <span class=\"token string\">'18.2'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'react-refresh'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n   <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token string-property property\">'react-refresh/only-export-components'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n       <span class=\"token string\">'warn'</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">allowConstantExport</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">     <span class=\"token string-property property\">'react/prop-types'</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span></span>   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Aprenderemos sobre ESLint más en detalle en la <a href=\"/es/part3/validacion_y_es_lint#lint\">parte 3</a>.</p>\n<h3>Algunas notas</h3>\n<p>React se ha configurado para generar mensajes de error bastante claros. A pesar de esto, debes, al menos al principio, avanzar en <strong>pasos muy pequeños</strong> y asegurarte de que cada cambio funcione como se desea.</p>\n<p><strong>La consola siempre debe estar abierta</strong>. Si el navegador reporta errores, no es recomendable seguir escribiendo más código, esperando milagros. En su lugar, debes intentar comprender la causa del error y, por ejemplo, volver al estado funcional anterior:</p>\n<picture><img src=\"/static/d6976fc68cf1d476dfdad2730e4614d5/5a190/2a.png\" alt=\"Captura de pantalla de error de prop: undefined\" srcset=\"/static/d6976fc68cf1d476dfdad2730e4614d5/772e8/2a.png 200w,\n/static/d6976fc68cf1d476dfdad2730e4614d5/e17e5/2a.png 400w,\n/static/d6976fc68cf1d476dfdad2730e4614d5/5a190/2a.png 800w,\n/static/d6976fc68cf1d476dfdad2730e4614d5/c1b63/2a.png 1200w,\n/static/d6976fc68cf1d476dfdad2730e4614d5/29007/2a.png 1600w,\n/static/d6976fc68cf1d476dfdad2730e4614d5/922e6/2a.png 2140w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Es bueno recordar que en React es posible y vale la pena escribir comandos <em>console.log()</em> (que se imprimen en la consola) dentro de tu código.</p>\n<p>También ten en cuenta que <strong>los nombres de los componentes de React deben iniciar con mayúscula</strong>. Si intentas definir un componente de la siguiente manera:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">footer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      greeting app created by <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">'https://github.com/mluukkai'</span><span class=\"token operator\">></span>mluukkai<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>y lo usas de esta manera:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token string\">'Maya'</span> age<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">26</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>footer <span class=\"token operator\">/</span><span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>la página no mostrará el contenido definido dentro del componente Footer, y en su lugar React solo crea un elemento <i>footer</i> vacío. Si cambias la primera letra del nombre del componente a una letra mayúscula, React crea el elemento <i>div</i> definido en el componente Footer, que se representa en la página.</p>\n<p>Ten en cuenta que el contenido de un componente de React (normalmente) debe contener <strong>un elemento raíz</strong>. Si, por ejemplo, intentamos definir el componente <i>App</i> sin el elemento <i>div</i> más externo:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token string\">'Maya'</span> age<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">26</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Footer <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>el resultado es un mensaje de error. </p>\n<picture><img src=\"/static/da442fb63308535124205c6f0bcbfe94/5a190/1-vite7.png\" alt=\"Captura de pantalla del error multiples elementos de raíz\" srcset=\"/static/da442fb63308535124205c6f0bcbfe94/772e8/1-vite7.png 200w,\n/static/da442fb63308535124205c6f0bcbfe94/e17e5/1-vite7.png 400w,\n/static/da442fb63308535124205c6f0bcbfe94/5a190/1-vite7.png 800w,\n/static/da442fb63308535124205c6f0bcbfe94/c1b63/1-vite7.png 1200w,\n/static/da442fb63308535124205c6f0bcbfe94/29007/1-vite7.png 1600w,\n/static/da442fb63308535124205c6f0bcbfe94/17d12/1-vite7.png 1666w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Usar un elemento raíz no es la única opción que funciona. Un <i>array</i> de componentes también es una solución válida: </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token string\">'Maya'</span> age<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">26</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">&lt;</span>Footer <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Sin embargo cuando se define el componente raíz de la aplicación esto no es algo particularmente inteligente de hacer, y hace que el código se vea un poco desagradable.</p>\n<p>Debido a que el elemento raíz está estipulado, tenemos elementos div \"extra\" en el árbol DOM. Esto se puede evitar usando <a href=\"https://es.legacy.reactjs.org/docs/fragments.html#short-syntax\">fragments</a>, es decir, envolviendo los elementos que el componente devolverá con un elemento vacío: </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Peter'</span>\n  <span class=\"token keyword\">const</span> age <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Greetings<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token string\">'Maya'</span> age<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">26</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Hello name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span> age<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Footer <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ahora este se compila con éxito y el DOM generado por React ya no contiene el elemento div adicional.</p>\n<h3>No renderizar objetos</h3>\n<p>Considera una aplicación que imprime en pantalla los nombres y edades de nuestros amigos:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> friends <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Peter'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Maya'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Sin embargo, nada aparece en la pantalla. He tratado de buscar el problema en el código por 15 minutos, pero no he podido encontrar cual puede ser el problema.</p>\n<p>Finalmente recordé la promesa que hice</p>\n<blockquote>\n<p><i>Prometo dejar la consola abierta todo el tiempo</i> durante este curso, y por el resto de mi vida mientras esté haciendo desarrollo web.</p>\n</blockquote>\n<p>La consola grita en rojo:</p>\n<picture><img src=\"/static/fdcc65efff174e0c0ce15bf636c4cd1c/5a190/34new.png\" alt=\"Consola mostrando error resaltado acerca de &#x22;Objects are not valid as a React child&#x22;\" srcset=\"/static/fdcc65efff174e0c0ce15bf636c4cd1c/772e8/34new.png 200w,\n/static/fdcc65efff174e0c0ce15bf636c4cd1c/e17e5/34new.png 400w,\n/static/fdcc65efff174e0c0ce15bf636c4cd1c/5a190/34new.png 800w,\n/static/fdcc65efff174e0c0ce15bf636c4cd1c/c1b63/34new.png 1200w,\n/static/fdcc65efff174e0c0ce15bf636c4cd1c/29007/34new.png 1600w,\n/static/fdcc65efff174e0c0ce15bf636c4cd1c/cc6fe/34new.png 1860w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>La raíz del problema es <i>Objects are not valid as a React child (Los objetos no son válidos como elementos hijos de React)</i>, es decir, la aplicación intentó renderizar <i>objetos</i> y falló nuevamente.</p>\n<p>El código trató de renderizar la información de un amigo de la siguiente manera:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span></code></pre></div>\n<p>y esto causó un problema porque el item a ser renderizado en las llaves es un objeto.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Peter'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>En React, las cosas individuales a ser renderizadas dentro de llaves deben ser valores primitivos, como números o cadenas.</p>\n<p>La solución es la siguiente:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> friends <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Peter'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Maya'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Ahora el nombre del amigo es renderizado dentro de las llaves de manera separada.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></code></pre></div>\n<p>y la edad</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Después de corregir el error, tu deberías limpiar los mensajes de la consola presionando el botón 🚫 y luego recargando el contenido de la página, y asegurarte de que no se están mostrando mensajes de error.</p>\n<p>Una pequeña nota adicional a la anterior. React también permite renderizar arreglos <i>si</i> el arreglo contiene valores que son elegibles para renderizar (como números y cadenas). Así que el siguiente programa funcionaría, aunque el resultado no ser el que queremos:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> friends <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'Peter'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Maya'</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>friends<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>En esta parte, ni siquiera vale la pena intentar utilizar la renderización directa de las tablas; volveremos a ello en la siguiente parte.</p>\n</div>\n<div class=\"tasks\"> \n  <h3>Ejercicios 1.1.-1.2.</h3> \n<p>Los ejercicios se envían a través de GitHub y marcando los ejercicios completados en el <a href=\"https://studies.cs.helsinki.fi/stats/courses/fullstackopen\">sistema de envío ejercicios</a>. </p>\n<p>Los ejercicios se envían <strong>una parte a la vez</strong>. Cuando hayas enviado los ejercicios para una parte del curso, ya no podrás enviar ejercicios incompletos para la misma parte.</p>\n<p>Ten en cuenta que en esta parte hay <a href=\"/es/part1/un_estado_mas_complejo_depurando_aplicaciones_react#exercises-1-6-1-14\">más ejercicios</a> además de los que se encuentran a continuación. <i>No envíes tu trabajo</i> hasta que hayas completado todos los ejercicios que deseas enviar para la parte.</p>\n<p>Puedes enviar todos los ejercicios de este curso al mismo repositorio o utilizar varios repositorios. Si envías ejercicios de diferentes partes en el mismo repositorio, utiliza un esquema de nomenclatura razonable para los directorios.</p>\n<p>Una estructura de archivos muy funcional para el repositorio de envíos es la siguiente:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">part0\npart1\n  courseinfo\n  unicafe\n  anecdotes\npart2\n  phonebook\n  countries</code></pre></div>\n<p>Mira este <a href=\"https://github.com/fullstack-hy2020/example-submission-repository\">repositorio de ejemplo para el envío de ejercicios</a>! </p>\n<p>Para cada parte del curso hay un directorio, que se ramifica en directorios que contienen una serie de ejercicios, como \"unicafe\" para la parte 1.</p>\n<p>La mayoría de los ejercicios del curso construyen una aplicación más grande, por ejemplo: courseinfo, unicafe y anecdotes en esta parte, poco a poco. Es suficiente con enviar la aplicación terminada. Puedes hacer un commit después de cada ejercicio, pero no es obligatorio. Por ejemplo, la aplicación de información del curso se construye en los ejercicios 1.1.-1.5. En este caso solo necesitas enviar el resultado final del ejercicio 1.5.</p>\n<p>Por cada aplicación web para una serie de ejercicios, se recomienda enviar todos los archivos relacionados con esa aplicación, excepto para el directorio <i>node_modules</i>.</p>\n  <h4>1.1: información del curso, paso 1</h4> \n<p><i>La aplicación en la que comenzaremos a trabajar en este ejercicio se desarrollará más a fondo en algunos de los siguientes ejercicios. En este y otros conjuntos de ejercicios futuros de este curso, es suficiente enviar solo el estado final de la aplicación. Si lo desea, también puedes crear un commit para cada ejercicio de la serie, pero esto es completamente opcional.</i></p>\n<p>Usa Vite para inicializar una nueva aplicación. Modifica <i>main.jsx</i> para que coincida con lo siguiente</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/client'</span>\n\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>y <i>App.jsx</i> para que coincida con lo siguiente</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> course <span class=\"token operator\">=</span> <span class=\"token string\">'Half Stack application development'</span>\n  <span class=\"token keyword\">const</span> part1 <span class=\"token operator\">=</span> <span class=\"token string\">'Fundamentals of React'</span>\n  <span class=\"token keyword\">const</span> exercises1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n  <span class=\"token keyword\">const</span> part2 <span class=\"token operator\">=</span> <span class=\"token string\">'Using props to pass data'</span>\n  <span class=\"token keyword\">const</span> exercises2 <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n  <span class=\"token keyword\">const</span> part3 <span class=\"token operator\">=</span> <span class=\"token string\">'State of a component'</span>\n  <span class=\"token keyword\">const</span> exercises3 <span class=\"token operator\">=</span> <span class=\"token number\">14</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>course<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>part1<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>exercises1<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>part2<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>exercises2<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>part3<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>exercises3<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Number <span class=\"token keyword\">of</span> exercises <span class=\"token punctuation\">{</span>exercises1 <span class=\"token operator\">+</span> exercises2 <span class=\"token operator\">+</span> exercises3<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>y elimina los archivos adicionales App.css, y index.css, y el directorio assets. </p>\n<p>Desafortunadamente, toda la aplicación está en el mismo componente. Refactoriza el código para que conste de tres componentes nuevos: <i>Header</i>, <i>Content</i> y <i>Total</i>. Todos los datos aún residen en el componente <i>App</i>, que pasa los datos necesarios a cada componente mediante <i>props</i>. <i>Header</i> se encarga de representar el nombre del curso, <i>Content</i> representa las partes y su número de ejercicios y <i>Total</i> representa el número total de ejercicios.</p>\n<p>Define los nuevos componentes en el archivo <i>App.jsx</i>.</p>\n<p>El cuerpo del componente <i>App</i> será aproximadamente como lo siguiente:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// const-definitions</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Header course<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>course<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Content <span class=\"token operator\">...</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Total <span class=\"token operator\">...</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>ADVERTENCIA</strong> No trates de programar todos los componentes de corrido, porque esto podría ciertamente romper toda la aplicación. Procede en pequeños pasos, primero haz por ejemplo: el componente <i>Header</i> y solo cuando confirmes que funciona, podrás continuar con el siguiente componente.</p>\n<p>El progreso cuidadoso y en pequeños pasos puede parecer lento, pero en realidad es <i>con diferencia la forma más rápida</i> de progresar. El famoso desarrollador de software Robert \"Uncle Bob\" Martin ha declarado</p>\n<blockquote>\n<p><i>\"La única manera de ir rápido, es hacerlo bien\"</i></p>\n</blockquote>\n<p>es decir, según Martin, avanzar con cuidado y con pequeños pasos es incluso la única manera de ser rápido.</p>\n<h4>1.2: información del curso, paso 2</h4>\n<p>Refactoriza el componente <i>Content</i> para que no muestre ningún nombre de partes o su número de ejercicios por sí mismo. En su lugar, solo representa tres componentes <i>Part</i> de los cuales cada uno representa el nombre y el número de ejercicios de una parte.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Content <span class=\"token operator\">=</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Part <span class=\"token operator\">...</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Part <span class=\"token operator\">...</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Part <span class=\"token operator\">...</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nuestra aplicación pasa información de una manera bastante primitiva en este momento, ya que se basa en variables individuales. Esta situación mejorará pronto en la <a href=\"/es/part2\">parte 2</a>, pero antes de eso, vamos a la <a href=\"/es/part1/java_script\">parte 1b</a> para aprender acerca de JavaScript.</p>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/83f1c8a7795e9e8eaffaec29b1ee79b1/part-1.svg"},"part":1,"letter":"a","lang":"es"}}},"pageContext":{"part":1,"letter":"a","lang":"es"}},"staticQueryHashes":["3128451518"]}